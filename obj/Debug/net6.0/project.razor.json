{
  "SerializedFilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\obj\\Debug\\net6.0\\project.razor.json",
  "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Workdo.csproj",
  "Configuration": {
    "ConfigurationName": "MVC-3.0",
    "LanguageVersion": "6.0",
    "Extensions": [
      {
        "ExtensionName": "MVC-3.0"
      }
    ]
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": 1345409842,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.Home",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Home"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.Home",
          "Common.TypeNamespace": "Workdo.Pages",
          "Common.TypeNameIdentifier": "Home"
        }
      },
      {
        "HashCode": 1427180218,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.Home",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.Home"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.Home",
          "Common.TypeNamespace": "Workdo.Pages",
          "Common.TypeNameIdentifier": "Home",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 722063905,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.Login",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Login"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.Login",
          "Common.TypeNamespace": "Workdo.Pages",
          "Common.TypeNameIdentifier": "Login"
        }
      },
      {
        "HashCode": -1582263727,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.Login",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.Login"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.Login",
          "Common.TypeNamespace": "Workdo.Pages",
          "Common.TypeNameIdentifier": "Login",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1511274704,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.Logout",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Logout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.Logout",
          "Common.TypeNamespace": "Workdo.Pages",
          "Common.TypeNameIdentifier": "Logout"
        }
      },
      {
        "HashCode": 2001919196,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.Logout",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.Logout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.Logout",
          "Common.TypeNamespace": "Workdo.Pages",
          "Common.TypeNameIdentifier": "Logout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1263809688,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Config.Category",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Category"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Config.Category",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Config",
          "Common.TypeNameIdentifier": "Category"
        }
      },
      {
        "HashCode": -801002817,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Config.Category",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Config.Category"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Config.Category",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Config",
          "Common.TypeNameIdentifier": "Category",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1861724583,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Config._Item",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Item"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "category",
            "TypeName": "Workdo.Models.CategoryModel",
            "Metadata": {
              "Common.PropertyName": "category",
              "Common.GloballyQualifiedTypeName": "global::Workdo.Models.CategoryModel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleDeleteCategory",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "HandleDeleteCategory",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.CategoryModel>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleEditCategory",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "HandleEditCategory",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.CategoryModel>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Config._Item",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Config",
          "Common.TypeNameIdentifier": "_Item"
        }
      },
      {
        "HashCode": -240694972,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Config._Item",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Config._Item"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "category",
            "TypeName": "Workdo.Models.CategoryModel",
            "Metadata": {
              "Common.PropertyName": "category",
              "Common.GloballyQualifiedTypeName": "global::Workdo.Models.CategoryModel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleDeleteCategory",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "HandleDeleteCategory",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.CategoryModel>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleEditCategory",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "HandleEditCategory",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.CategoryModel>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Config._Item",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Config",
          "Common.TypeNameIdentifier": "_Item",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1889926729,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Config._ModalData",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ModalData"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "nameModal",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "nameModal",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "contentButton",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "contentButton",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "categoryName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "categoryName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "toggleActiveModal",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "toggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleActiveModal",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleConfirmation",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "HandleConfirmation",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Config._ModalData",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Config",
          "Common.TypeNameIdentifier": "_ModalData"
        }
      },
      {
        "HashCode": -1444132751,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Config._ModalData",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Config._ModalData"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "nameModal",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "nameModal",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "contentButton",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "contentButton",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "categoryName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "categoryName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "toggleActiveModal",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "toggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleActiveModal",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleConfirmation",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "HandleConfirmation",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Config._ModalData",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Config",
          "Common.TypeNameIdentifier": "_ModalData",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1361227425,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._ChoiceItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ChoiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "index",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "index",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._ChoiceItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_ChoiceItem"
        }
      },
      {
        "HashCode": 359108893,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._ChoiceItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Create._ChoiceItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "index",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "index",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._ChoiceItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_ChoiceItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -92280924,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._ContentPoll",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ContentPoll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._ContentPoll",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_ContentPoll"
        }
      },
      {
        "HashCode": -1499296200,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._ContentPoll",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Create._ContentPoll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._ContentPoll",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_ContentPoll",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1533181245,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._Poll",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Poll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HandleToogleCreatePoll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleToogleCreatePoll",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandelCreatePoll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandelCreatePoll",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._Poll",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_Poll"
        }
      },
      {
        "HashCode": 1669582808,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._Poll",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Create._Poll"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HandleToogleCreatePoll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleToogleCreatePoll",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandelCreatePoll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandelCreatePoll",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._Poll",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_Poll",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1087524744,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._QuestionItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_QuestionItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "questionIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "questionIndex",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._QuestionItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_QuestionItem"
        }
      },
      {
        "HashCode": 460832389,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create._QuestionItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Create._QuestionItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "questionIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "questionIndex",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create._QuestionItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "_QuestionItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1491614827,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create.Create",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Create"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create.Create",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "Create"
        }
      },
      {
        "HashCode": 328592285,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Create.Create",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Create.Create"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Create.Create",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Create",
          "Common.TypeNameIdentifier": "Create",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -938212454,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail.Detail",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Detail"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "slug",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "slug",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail.Detail",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "Detail"
        }
      },
      {
        "HashCode": -1215558897,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail.Detail",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail.Detail"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "slug",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "slug",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail.Detail",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "Detail",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1887914537,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._ActionMail",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ActionMail"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._ActionMail",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_ActionMail"
        }
      },
      {
        "HashCode": 993313310,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._ActionMail",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._ActionMail"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._ActionMail",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_ActionMail",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1926789926,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Forward",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Forward"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Forward",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Forward"
        }
      },
      {
        "HashCode": -630348703,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Forward",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._Forward"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Forward",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Forward",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 324357261,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Header",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Header"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "isImportant",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isImportant",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isRead",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isRead",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Header",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Header"
        }
      },
      {
        "HashCode": -1236883031,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Header",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._Header"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "isImportant",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isImportant",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isRead",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isRead",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Header",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Header",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1998141180,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._MailAction",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_MailAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "currentAction",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "currentAction",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "iconName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "iconName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "actionName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "actionName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "displayName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "displayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowTextTo",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowTextTo",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._MailAction",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_MailAction"
        }
      },
      {
        "HashCode": -1304216199,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._MailAction",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._MailAction"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "currentAction",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "currentAction",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "iconName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "iconName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "actionName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "actionName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "displayName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "displayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowTextTo",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowTextTo",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._MailAction",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_MailAction",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 176914602,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._MailActionsBar",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_MailActionsBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "displayName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "displayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "mailName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "mailName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "sentDate",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "sentDate",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "to",
            "TypeName": "System.Collections.Generic.List<System.String>",
            "Metadata": {
              "Common.PropertyName": "to",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::System.String>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "cc",
            "TypeName": "System.Collections.Generic.List<System.String>",
            "Metadata": {
              "Common.PropertyName": "cc",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::System.String>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SetCurrentAction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SetCurrentAction",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._MailActionsBar",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_MailActionsBar"
        }
      },
      {
        "HashCode": 1394853419,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._MailActionsBar",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._MailActionsBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "displayName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "displayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "mailName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "mailName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "sentDate",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "sentDate",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "to",
            "TypeName": "System.Collections.Generic.List<System.String>",
            "Metadata": {
              "Common.PropertyName": "to",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::System.String>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "cc",
            "TypeName": "System.Collections.Generic.List<System.String>",
            "Metadata": {
              "Common.PropertyName": "cc",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::System.String>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SetCurrentAction",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "SetCurrentAction",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._MailActionsBar",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_MailActionsBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -654445824,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._ReplyItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ReplyItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "isShowDetail",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowDetail",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._ReplyItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_ReplyItem"
        }
      },
      {
        "HashCode": 881353527,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._ReplyItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._ReplyItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "isShowDetail",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowDetail",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._ReplyItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_ReplyItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 323621405,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Statistical",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Statistical"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "questions",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.QuestionModel>",
            "Metadata": {
              "Common.PropertyName": "questions",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.QuestionModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Statistical",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Statistical"
        }
      },
      {
        "HashCode": 1807666936,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Statistical",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._Statistical"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "questions",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.QuestionModel>",
            "Metadata": {
              "Common.PropertyName": "questions",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.QuestionModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Statistical",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Statistical",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -224855381,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Survey",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Survey"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "questions",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.QuestionModel>",
            "Metadata": {
              "Common.PropertyName": "questions",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.QuestionModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Survey",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Survey"
        }
      },
      {
        "HashCode": -1023852832,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Detail._Survey",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Detail._Survey"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "questions",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.QuestionModel>",
            "Metadata": {
              "Common.PropertyName": "questions",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.QuestionModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Detail._Survey",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Detail",
          "Common.TypeNameIdentifier": "_Survey",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 851397347,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Drafts",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Drafts"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Drafts",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Drafts"
        }
      },
      {
        "HashCode": 2063639336,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Drafts",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail.Drafts"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Drafts",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Drafts",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1495190207,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Important",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Important"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Important",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Important"
        }
      },
      {
        "HashCode": -699440347,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Important",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail.Important"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Important",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Important",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1976307962,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Inbox",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Inbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Inbox",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Inbox"
        }
      },
      {
        "HashCode": -748422067,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Inbox",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail.Inbox"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Inbox",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Inbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 956088990,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Label",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Label"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Label",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Label"
        }
      },
      {
        "HashCode": -275695654,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Label",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail.Label"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Label",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Label",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1329533071,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Sent",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Sent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Sent",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Sent"
        }
      },
      {
        "HashCode": -94565,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Sent",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail.Sent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Sent",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Sent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -956161785,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Trash",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Trash"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Trash",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Trash"
        }
      },
      {
        "HashCode": -1993470195,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail.Trash",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail.Trash"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail.Trash",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "Trash",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1725872985,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Actions",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Actions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "mailCount",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "mailCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleCancelSelectedMail",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleCancelSelectedMail",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleTrashMails",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleTrashMails",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isTrashMails",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isTrashMails",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Actions",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Actions"
        }
      },
      {
        "HashCode": -689574561,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Actions",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail._Actions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "mailCount",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "mailCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleCancelSelectedMail",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleCancelSelectedMail",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleTrashMails",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleTrashMails",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isTrashMails",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isTrashMails",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Actions",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Actions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1013476275,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Category",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Category"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "categories",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "categories",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.CategoryModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Category",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Category"
        }
      },
      {
        "HashCode": 1857155156,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Category",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail._Category"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "categories",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "categories",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.CategoryModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Category",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Category",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1952980347,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Header",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Header"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "quantityColumnFirst",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "quantityColumnFirst",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "quantityColumnSecond",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "quantityColumnSecond",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowStatus",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowStatus",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowLabel",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowLabel",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "placehoder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "placehoder",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Header",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Header"
        }
      },
      {
        "HashCode": 1652935104,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Header",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail._Header"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "quantityColumnFirst",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "quantityColumnFirst",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "quantityColumnSecond",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "quantityColumnSecond",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowStatus",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowStatus",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowLabel",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowLabel",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "placehoder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "placehoder",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Header",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Header",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1068325001,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Item",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Item"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "from",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "from",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "subject",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "subject",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "body",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "body",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "sentDate",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "sentDate",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "attachments",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.AttachmentModel>",
            "Metadata": {
              "Common.PropertyName": "attachments",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.AttachmentModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isImportant",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isImportant",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isRead",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isRead",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isChecked",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isChecked",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleSelectedMail",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.SelectedModel>",
            "Metadata": {
              "Common.PropertyName": "HandleSelectedMail",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.SelectedModel>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isDraft",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isDraft",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Item",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Item"
        }
      },
      {
        "HashCode": -1331059840,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Item",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail._Item"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "from",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "from",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "subject",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "subject",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "body",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "body",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "sentDate",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "sentDate",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "attachments",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.AttachmentModel>",
            "Metadata": {
              "Common.PropertyName": "attachments",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.AttachmentModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isImportant",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isImportant",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isRead",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isRead",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isChecked",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isChecked",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleSelectedMail",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.SelectedModel>",
            "Metadata": {
              "Common.PropertyName": "HandleSelectedMail",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.SelectedModel>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isDraft",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isDraft",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Item",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Item",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -375889980,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Pagination",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Pagination"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Pagination",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Pagination"
        }
      },
      {
        "HashCode": -1935598886,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Mail._Pagination",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Mail._Pagination"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Mail._Pagination",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Mail",
          "Common.TypeNameIdentifier": "_Pagination",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1347196873,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._GroupItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_GroupItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "membersCount",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "membersCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleViewDetailGroup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "HandleViewDetailGroup",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleConfirmationDeleteGroup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "HandleConfirmationDeleteGroup",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._GroupItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_GroupItem"
        }
      },
      {
        "HashCode": -752696459,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._GroupItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings._GroupItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "membersCount",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "membersCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleViewDetailGroup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "HandleViewDetailGroup",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleConfirmationDeleteGroup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "HandleConfirmationDeleteGroup",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._GroupItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_GroupItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 768479481,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerCategory",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ManagerCategory"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "categories",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "categories",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.CategoryModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerCategory",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerCategory"
        }
      },
      {
        "HashCode": 1111533203,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerCategory",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings._ManagerCategory"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "categories",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.CategoryModel>",
            "Metadata": {
              "Common.PropertyName": "categories",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.CategoryModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerCategory",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerCategory",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 309702106,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerLabel",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ManagerLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerLabel",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerLabel"
        }
      },
      {
        "HashCode": -294511799,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerLabel",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings._ManagerLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerLabel",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1325953306,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._MemberItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_MemberItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "member",
            "TypeName": "Workdo.Models.MemberModel",
            "Metadata": {
              "Common.PropertyName": "member",
              "Common.GloballyQualifiedTypeName": "global::Workdo.Models.MemberModel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleDeleteMember",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.MemberModel>",
            "Metadata": {
              "Common.PropertyName": "HandleDeleteMember",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.MemberModel>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._MemberItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_MemberItem"
        }
      },
      {
        "HashCode": 1291083990,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._MemberItem",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings._MemberItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "member",
            "TypeName": "Workdo.Models.MemberModel",
            "Metadata": {
              "Common.PropertyName": "member",
              "Common.GloballyQualifiedTypeName": "global::Workdo.Models.MemberModel"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleDeleteMember",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Workdo.Models.MemberModel>",
            "Metadata": {
              "Common.PropertyName": "HandleDeleteMember",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Workdo.Models.MemberModel>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._MemberItem",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_MemberItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 681856993,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings.Settings",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Settings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings.Settings",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "Settings"
        }
      },
      {
        "HashCode": -2105668556,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings.Settings",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings.Settings"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings.Settings",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "Settings",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 850980744,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerGroup",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ManagerGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "groups",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.GroupModel>",
            "Metadata": {
              "Common.PropertyName": "groups",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.GroupModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "members",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.MemberModel>",
            "Metadata": {
              "Common.PropertyName": "members",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.MemberModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerGroup",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerGroup"
        }
      },
      {
        "HashCode": -2031230635,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerGroup",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings._ManagerGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "groups",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.GroupModel>",
            "Metadata": {
              "Common.PropertyName": "groups",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.GroupModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "members",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.MemberModel>",
            "Metadata": {
              "Common.PropertyName": "members",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.MemberModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerGroup",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1064307115,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerSignature",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ManagerSignature"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "signatures",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.SignatureModel>",
            "Metadata": {
              "Common.PropertyName": "signatures",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.SignatureModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerSignature",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerSignature"
        }
      },
      {
        "HashCode": 1559831633,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox.Settings._ManagerSignature",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox.Settings._ManagerSignature"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "signatures",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.SignatureModel>",
            "Metadata": {
              "Common.PropertyName": "signatures",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.SignatureModel>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox.Settings._ManagerSignature",
          "Common.TypeNamespace": "Workdo.Pages.MailBox.Settings",
          "Common.TypeNameIdentifier": "_ManagerSignature",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 877876511,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._AddGroupMember",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_AddGroupMember"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "directionDropdown",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "directionDropdown",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "groups",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.GroupModel>",
            "Metadata": {
              "Common.PropertyName": "groups",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.GroupModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleSelectedGroup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<Workdo.Models.GroupModel>>",
            "Metadata": {
              "Common.PropertyName": "HandleSelectedGroup",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::Workdo.Models.GroupModel>>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._AddGroupMember",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_AddGroupMember"
        }
      },
      {
        "HashCode": -1438640672,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._AddGroupMember",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._AddGroupMember"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "directionDropdown",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "directionDropdown",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "groups",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.GroupModel>",
            "Metadata": {
              "Common.PropertyName": "groups",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.GroupModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleSelectedGroup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<Workdo.Models.GroupModel>>",
            "Metadata": {
              "Common.PropertyName": "HandleSelectedGroup",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::Workdo.Models.GroupModel>>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._AddGroupMember",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_AddGroupMember",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1362156836,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._AddMember",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_AddMember"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "members",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.MemberModel>",
            "Metadata": {
              "Common.PropertyName": "members",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.MemberModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "directionDropdown",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "directionDropdown",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleSelectedMember",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<Workdo.Models.MemberModel>>",
            "Metadata": {
              "Common.PropertyName": "HandleSelectedMember",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::Workdo.Models.MemberModel>>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._AddMember",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_AddMember"
        }
      },
      {
        "HashCode": 530535421,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._AddMember",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._AddMember"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "members",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.MemberModel>",
            "Metadata": {
              "Common.PropertyName": "members",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.MemberModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "directionDropdown",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "directionDropdown",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleSelectedMember",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.List<Workdo.Models.MemberModel>>",
            "Metadata": {
              "Common.PropertyName": "HandleSelectedMember",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Collections.Generic.List<global::Workdo.Models.MemberModel>>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._AddMember",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_AddMember",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -475407224,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._DropdownPoll",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_DropdownPoll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._DropdownPoll",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_DropdownPoll"
        }
      },
      {
        "HashCode": -126657452,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._DropdownPoll",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._DropdownPoll"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._DropdownPoll",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_DropdownPoll",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -274013774,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._LabelPicker",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_LabelPicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "title",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowButtons",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowButtons",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isFilter",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isFilter",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._LabelPicker",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_LabelPicker"
        }
      },
      {
        "HashCode": -226424948,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._LabelPicker",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._LabelPicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "labels",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.LabelModel>",
            "Metadata": {
              "Common.PropertyName": "labels",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.LabelModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "title",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isShowButtons",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isShowButtons",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "isFilter",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "isFilter",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._LabelPicker",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_LabelPicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 826343526,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._MailHeader",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_MailHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._MailHeader",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_MailHeader"
        }
      },
      {
        "HashCode": -194302967,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._MailHeader",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._MailHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._MailHeader",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_MailHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1462927228,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._MailWriteZone",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_MailWriteZone"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._MailWriteZone",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_MailWriteZone"
        }
      },
      {
        "HashCode": 731377686,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._MailWriteZone",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._MailWriteZone"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._MailWriteZone",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_MailWriteZone",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 897598659,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._ModalConfirmation",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_ModalConfirmation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "nameModal",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "nameModal",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "contentModal",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "contentModal",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "contentButton",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "contentButton",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "toggleActiveModal",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "toggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleActiveModal",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleConfirmation",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleConfirmation",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._ModalConfirmation",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_ModalConfirmation"
        }
      },
      {
        "HashCode": 1111948736,
        "Kind": "Components.Component",
        "Name": "Workdo.Pages.MailBox._ModalConfirmation",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Pages.MailBox._ModalConfirmation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "nameModal",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "nameModal",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "contentModal",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "contentModal",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "contentButton",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "contentButton",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "toggleActiveModal",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "toggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleActiveModal",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleActiveModal",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleConfirmation",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "HandleConfirmation",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Pages.MailBox._ModalConfirmation",
          "Common.TypeNamespace": "Workdo.Pages.MailBox",
          "Common.TypeNameIdentifier": "_ModalConfirmation",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -566863212,
        "Kind": "Components.Component",
        "Name": "Workdo.App",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.App",
          "Common.TypeNamespace": "Workdo",
          "Common.TypeNameIdentifier": "App"
        }
      },
      {
        "HashCode": 2032276463,
        "Kind": "Components.Component",
        "Name": "Workdo.App",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.App",
          "Common.TypeNamespace": "Workdo",
          "Common.TypeNameIdentifier": "App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 758306308,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.HeaderMain",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderMain"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.HeaderMain",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "HeaderMain"
        }
      },
      {
        "HashCode": -394093892,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.HeaderMain",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.HeaderMain"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.HeaderMain",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "HeaderMain",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2136353386,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.LayoutLogin",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutLogin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.LayoutLogin",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutLogin"
        }
      },
      {
        "HashCode": 1992891007,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.LayoutLogin",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.LayoutLogin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.LayoutLogin",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutLogin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -789431706,
        "Kind": "Components.ChildContent",
        "Name": "Workdo.Shared.LayoutLogin.Body",
        "AssemblyName": "Workdo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "LayoutLogin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Workdo.Shared.LayoutLogin.Body",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutLogin",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -4471763,
        "Kind": "Components.ChildContent",
        "Name": "Workdo.Shared.LayoutLogin.Body",
        "AssemblyName": "Workdo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Workdo.Shared.LayoutLogin"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Workdo.Shared.LayoutLogin.Body",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutLogin",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -738002158,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.LayoutMail",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutMail"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.LayoutMail",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMail"
        }
      },
      {
        "HashCode": -708946002,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.LayoutMail",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.LayoutMail"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.LayoutMail",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMail",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1387470579,
        "Kind": "Components.ChildContent",
        "Name": "Workdo.Shared.LayoutMail.Body",
        "AssemblyName": "Workdo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "LayoutMail"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Workdo.Shared.LayoutMail.Body",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMail",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1451574828,
        "Kind": "Components.ChildContent",
        "Name": "Workdo.Shared.LayoutMail.Body",
        "AssemblyName": "Workdo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Workdo.Shared.LayoutMail"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Workdo.Shared.LayoutMail.Body",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMail",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -942629219,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.LayoutMain",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutMain"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.LayoutMain",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMain"
        }
      },
      {
        "HashCode": 746793915,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.LayoutMain",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.LayoutMain"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.LayoutMain",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMain",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 506425844,
        "Kind": "Components.ChildContent",
        "Name": "Workdo.Shared.LayoutMain.Body",
        "AssemblyName": "Workdo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "LayoutMain"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Workdo.Shared.LayoutMain.Body",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMain",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 644553344,
        "Kind": "Components.ChildContent",
        "Name": "Workdo.Shared.LayoutMain.Body",
        "AssemblyName": "Workdo",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Workdo.Shared.LayoutMain"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Workdo.Shared.LayoutMain.Body",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "LayoutMain",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1025357650,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.MailSideBar",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MailSideBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HandleActiveTab",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "HandleActiveTab",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleSidebarMail",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleSidebarMail",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.MailSideBar",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "MailSideBar"
        }
      },
      {
        "HashCode": 1780044636,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.MailSideBar",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.MailSideBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HandleActiveTab",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Metadata": {
              "Common.PropertyName": "HandleActiveTab",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Int32>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleSidebarMail",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleSidebarMail",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.MailSideBar",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "MailSideBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1698711794,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.PopupNoti",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PopupNoti"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "type",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "model",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.NotifyModel>",
            "Metadata": {
              "Common.PropertyName": "model",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.NotifyModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClose",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClose",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.PopupNoti",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "PopupNoti"
        }
      },
      {
        "HashCode": 148366949,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.PopupNoti",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.PopupNoti"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "type",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "model",
            "TypeName": "System.Collections.Generic.List<Workdo.Models.NotifyModel>",
            "Metadata": {
              "Common.PropertyName": "model",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.List<global::Workdo.Models.NotifyModel>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClose",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClose",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.PopupNoti",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "PopupNoti",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1212288671,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.Sidebar",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Sidebar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleSidebar",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleSidebar",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.Sidebar",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "Sidebar"
        }
      },
      {
        "HashCode": 1548578356,
        "Kind": "Components.Component",
        "Name": "Workdo.Shared.Sidebar",
        "AssemblyName": "Workdo",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Workdo.Shared.Sidebar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HandleToggleSidebar",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "HandleToggleSidebar",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Workdo.Shared.Sidebar",
          "Common.TypeNamespace": "Workdo.Shared",
          "Common.TypeNameIdentifier": "Sidebar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1410990380,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.Calendar",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Calendar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "CalendarData",
            "TypeName": "BlazorDateRangePicker.CalendarType",
            "Metadata": {
              "Common.PropertyName": "CalendarData",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.CalendarType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Side",
            "TypeName": "BlazorDateRangePicker.SideType?",
            "Metadata": {
              "Common.PropertyName": "Side",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.SideType?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMonthChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnMonthChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnClickDate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnHoverDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnHoverDate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.Calendar",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "Calendar"
        }
      },
      {
        "HashCode": 1564353864,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.Calendar",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.Calendar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "CalendarData",
            "TypeName": "BlazorDateRangePicker.CalendarType",
            "Metadata": {
              "Common.PropertyName": "CalendarData",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.CalendarType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Side",
            "TypeName": "BlazorDateRangePicker.SideType?",
            "Metadata": {
              "Common.PropertyName": "Side",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.SideType?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMonthChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnMonthChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClickDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnClickDate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnHoverDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnHoverDate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.Calendar",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "Calendar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 63178226,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.DateRangePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Config",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Config",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Container",
            "TypeName": "BlazorDateRangePicker.PickerContainer",
            "Metadata": {
              "Common.PropertyName": "Container",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.PickerContainer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PickerTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<BlazorDateRangePicker.DateRangePicker>",
            "Metadata": {
              "Common.PropertyName": "PickerTemplate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::BlazorDateRangePicker.DateRangePicker>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonsTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<BlazorDateRangePicker.DateRangePicker>",
            "Metadata": {
              "Common.PropertyName": "ButtonsTemplate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::BlazorDateRangePicker.DateRangePicker>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DayTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<BlazorDateRangePicker.CalendarItem>",
            "Metadata": {
              "Common.PropertyName": "DayTemplate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::BlazorDateRangePicker.CalendarItem>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ranges",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, BlazorDateRangePicker.DateRange>",
            "Metadata": {
              "Common.PropertyName": "Ranges",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.Dictionary<global::System.String, global::BlazorDateRangePicker.DateRange>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoApply",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "AutoApply",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleDatePicker",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "SingleDatePicker",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowOnlyOneCalendar",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowOnlyOneCalendar",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ResetOnClear",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ResetOnClear",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlwaysShowCalendars",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "AlwaysShowCalendars",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonClasses",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ButtonClasses",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyButtonClasses",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ApplyButtonClasses",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelButtonClasses",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CancelButtonClasses",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ApplyLabel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CancelLabel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomRangeLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CustomRangeLabel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "StartDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartDateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Metadata": {
              "Common.PropertyName": "StartDateChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset?>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "EndDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Metadata": {
              "Common.PropertyName": "EndDateChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset?>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DateFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DateFormat",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowWeekNumbers",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowWeekNumbers",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowISOWeekNumbers",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowISOWeekNumbers",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LinkedCalendars",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "LinkedCalendars",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowDropdowns",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowDropdowns",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowCustomRangeLabel",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowCustomRangeLabel",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Inline",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "Inline",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Metadata": {
              "Common.PropertyName": "Culture",
              "Common.GloballyQualifiedTypeName": "global::System.Globalization.CultureInfo"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WeekAbbreviation",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "WeekAbbreviation",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FirstDayOfWeek",
            "TypeName": "System.DayOfWeek?",
            "Metadata": {
              "Common.PropertyName": "FirstDayOfWeek",
              "Common.GloballyQualifiedTypeName": "global::System.DayOfWeek?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "MinDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "MaxDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxSpan",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "MaxSpan",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinSpan",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "MinSpan",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Visible",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CloseOnOutsideClick",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "CloseOnOutsideClick",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoAdjustCalendars",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "AutoAdjustCalendars",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Prerender",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "Prerender",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePicker",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "TimePicker",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePicker24Hour",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "TimePicker24Hour",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePickerIncrement",
            "TypeName": "System.Int32?",
            "Metadata": {
              "Common.PropertyName": "TimePickerIncrement",
              "Common.GloballyQualifiedTypeName": "global::System.Int32?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePickerSeconds",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "TimePickerSeconds",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitialStartTime",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "InitialStartTime",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitialEndTime",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "InitialEndTime",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opens",
            "TypeName": "BlazorDateRangePicker.SideType?",
            "Metadata": {
              "Common.PropertyName": "Opens",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.SideType?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Drops",
            "TypeName": "BlazorDateRangePicker.DropsType?",
            "Metadata": {
              "Common.PropertyName": "Drops",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.DropsType?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeEnabledFunction",
            "TypeName": "System.Func<System.DateTimeOffset?, System.Threading.Tasks.Task<BlazorDateRangePicker.TimeSettings>>",
            "Metadata": {
              "Common.PropertyName": "TimeEnabledFunction",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset?, global::System.Threading.Tasks.Task<global::BlazorDateRangePicker.TimeSettings>>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DaysEnabledFunction",
            "TypeName": "System.Func<System.DateTimeOffset, System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "DaysEnabledFunction",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset, global::System.Boolean>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DaysEnabledFunctionAsync",
            "TypeName": "System.Func<System.DateTimeOffset, System.Threading.Tasks.Task<System.Boolean>>",
            "Metadata": {
              "Common.PropertyName": "DaysEnabledFunctionAsync",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset, global::System.Threading.Tasks.Task<global::System.Boolean>>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomDateClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CustomDateClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomDateFunction",
            "TypeName": "System.Func<System.DateTimeOffset, System.Object>",
            "Metadata": {
              "Common.PropertyName": "CustomDateFunction",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset, global::System.Object>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRangeSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<BlazorDateRangePicker.DateRange>",
            "Metadata": {
              "Common.PropertyName": "OnRangeSelect",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorDateRangePicker.DateRange>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnReset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnReset",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnOpened",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClosed",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClosed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnCancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OnCancel",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMonthChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnMonthChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMonthChangedAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Threading.CancellationToken>",
            "Metadata": {
              "Common.PropertyName": "OnMonthChangedAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Threading.CancellationToken>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionStart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnSelectionStart",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionEnd",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnSelectionEnd",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker"
        }
      },
      {
        "HashCode": -325741916,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.DateRangePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Config",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Config",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.Dictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Container",
            "TypeName": "BlazorDateRangePicker.PickerContainer",
            "Metadata": {
              "Common.PropertyName": "Container",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.PickerContainer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PickerTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<BlazorDateRangePicker.DateRangePicker>",
            "Metadata": {
              "Common.PropertyName": "PickerTemplate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::BlazorDateRangePicker.DateRangePicker>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonsTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<BlazorDateRangePicker.DateRangePicker>",
            "Metadata": {
              "Common.PropertyName": "ButtonsTemplate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::BlazorDateRangePicker.DateRangePicker>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DayTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<BlazorDateRangePicker.CalendarItem>",
            "Metadata": {
              "Common.PropertyName": "DayTemplate",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::BlazorDateRangePicker.CalendarItem>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Ranges",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, BlazorDateRangePicker.DateRange>",
            "Metadata": {
              "Common.PropertyName": "Ranges",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.Dictionary<global::System.String, global::BlazorDateRangePicker.DateRange>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoApply",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "AutoApply",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleDatePicker",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "SingleDatePicker",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowOnlyOneCalendar",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowOnlyOneCalendar",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ResetOnClear",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ResetOnClear",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlwaysShowCalendars",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "AlwaysShowCalendars",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonClasses",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ButtonClasses",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyButtonClasses",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ApplyButtonClasses",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelButtonClasses",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CancelButtonClasses",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ApplyLabel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CancelLabel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomRangeLabel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CustomRangeLabel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "StartDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartDateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Metadata": {
              "Common.PropertyName": "StartDateChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset?>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "EndDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Metadata": {
              "Common.PropertyName": "EndDateChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset?>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DateFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DateFormat",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowWeekNumbers",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowWeekNumbers",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowISOWeekNumbers",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowISOWeekNumbers",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LinkedCalendars",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "LinkedCalendars",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowDropdowns",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowDropdowns",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowCustomRangeLabel",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "ShowCustomRangeLabel",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Inline",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "Inline",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Metadata": {
              "Common.PropertyName": "Culture",
              "Common.GloballyQualifiedTypeName": "global::System.Globalization.CultureInfo"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WeekAbbreviation",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "WeekAbbreviation",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FirstDayOfWeek",
            "TypeName": "System.DayOfWeek?",
            "Metadata": {
              "Common.PropertyName": "FirstDayOfWeek",
              "Common.GloballyQualifiedTypeName": "global::System.DayOfWeek?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "MinDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxDate",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "MaxDate",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxSpan",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "MaxSpan",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinSpan",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "MinSpan",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Visible",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CloseOnOutsideClick",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "CloseOnOutsideClick",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoAdjustCalendars",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "AutoAdjustCalendars",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Prerender",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "Prerender",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePicker",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "TimePicker",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePicker24Hour",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "TimePicker24Hour",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePickerIncrement",
            "TypeName": "System.Int32?",
            "Metadata": {
              "Common.PropertyName": "TimePickerIncrement",
              "Common.GloballyQualifiedTypeName": "global::System.Int32?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimePickerSeconds",
            "TypeName": "System.Boolean?",
            "Metadata": {
              "Common.PropertyName": "TimePickerSeconds",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitialStartTime",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "InitialStartTime",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitialEndTime",
            "TypeName": "System.TimeSpan?",
            "Metadata": {
              "Common.PropertyName": "InitialEndTime",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Opens",
            "TypeName": "BlazorDateRangePicker.SideType?",
            "Metadata": {
              "Common.PropertyName": "Opens",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.SideType?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Drops",
            "TypeName": "BlazorDateRangePicker.DropsType?",
            "Metadata": {
              "Common.PropertyName": "Drops",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.DropsType?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeEnabledFunction",
            "TypeName": "System.Func<System.DateTimeOffset?, System.Threading.Tasks.Task<BlazorDateRangePicker.TimeSettings>>",
            "Metadata": {
              "Common.PropertyName": "TimeEnabledFunction",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset?, global::System.Threading.Tasks.Task<global::BlazorDateRangePicker.TimeSettings>>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DaysEnabledFunction",
            "TypeName": "System.Func<System.DateTimeOffset, System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "DaysEnabledFunction",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset, global::System.Boolean>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DaysEnabledFunctionAsync",
            "TypeName": "System.Func<System.DateTimeOffset, System.Threading.Tasks.Task<System.Boolean>>",
            "Metadata": {
              "Common.PropertyName": "DaysEnabledFunctionAsync",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset, global::System.Threading.Tasks.Task<global::System.Boolean>>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomDateClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CustomDateClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomDateFunction",
            "TypeName": "System.Func<System.DateTimeOffset, System.Object>",
            "Metadata": {
              "Common.PropertyName": "CustomDateFunction",
              "Common.GloballyQualifiedTypeName": "global::System.Func<global::System.DateTimeOffset, global::System.Object>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnRangeSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<BlazorDateRangePicker.DateRange>",
            "Metadata": {
              "Common.PropertyName": "OnRangeSelect",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::BlazorDateRangePicker.DateRange>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnReset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnReset",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnOpened",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnOpened",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnClosed",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnClosed",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnCancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "OnCancel",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMonthChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "OnMonthChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnMonthChangedAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Threading.CancellationToken>",
            "Metadata": {
              "Common.PropertyName": "OnMonthChangedAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Threading.CancellationToken>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionStart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnSelectionStart",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSelectionEnd",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset>",
            "Metadata": {
              "Common.PropertyName": "OnSelectionEnd",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.DateTimeOffset>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 155317528,
        "Kind": "Components.ChildContent",
        "Name": "BlazorDateRangePicker.DateRangePicker.PickerTemplate",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PickerTemplate",
            "ParentTag": "DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'PickerTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker.PickerTemplate",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -349027422,
        "Kind": "Components.ChildContent",
        "Name": "BlazorDateRangePicker.DateRangePicker.PickerTemplate",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PickerTemplate",
            "ParentTag": "BlazorDateRangePicker.DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'PickerTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker.PickerTemplate",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 410266606,
        "Kind": "Components.ChildContent",
        "Name": "BlazorDateRangePicker.DateRangePicker.ButtonsTemplate",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ButtonsTemplate",
            "ParentTag": "DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ButtonsTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker.ButtonsTemplate",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 549077324,
        "Kind": "Components.ChildContent",
        "Name": "BlazorDateRangePicker.DateRangePicker.ButtonsTemplate",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ButtonsTemplate",
            "ParentTag": "BlazorDateRangePicker.DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ButtonsTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker.ButtonsTemplate",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1919893700,
        "Kind": "Components.ChildContent",
        "Name": "BlazorDateRangePicker.DateRangePicker.DayTemplate",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DayTemplate",
            "ParentTag": "DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DayTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker.DayTemplate",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1471465367,
        "Kind": "Components.ChildContent",
        "Name": "BlazorDateRangePicker.DateRangePicker.DayTemplate",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DayTemplate",
            "ParentTag": "BlazorDateRangePicker.DateRangePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'DayTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker.DayTemplate",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -851240366,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.TimePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TimePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Side",
            "TypeName": "BlazorDateRangePicker.SideType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Side",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.SideType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Time",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "Time",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>",
            "Metadata": {
              "Common.PropertyName": "TimeChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.TimeSpan?>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Day",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "Day",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.TimePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "TimePicker"
        }
      },
      {
        "HashCode": -628245522,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.TimePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.TimePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Side",
            "TypeName": "BlazorDateRangePicker.SideType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Side",
              "Common.GloballyQualifiedTypeName": "global::BlazorDateRangePicker.SideType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Time",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "Time",
              "Common.GloballyQualifiedTypeName": "global::System.TimeSpan"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>",
            "Metadata": {
              "Common.PropertyName": "TimeChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.TimeSpan?>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Day",
            "TypeName": "System.DateTimeOffset?",
            "Metadata": {
              "Common.PropertyName": "Day",
              "Common.GloballyQualifiedTypeName": "global::System.DateTimeOffset?"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.TimePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "TimePicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 596114636,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.PickerContainer",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PickerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.PickerContainer",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "PickerContainer"
        }
      },
      {
        "HashCode": 383954680,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker.PickerContainer",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.PickerContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker.PickerContainer",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "PickerContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 906377528,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker._Imports",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Imports"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker._Imports",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "_Imports"
        }
      },
      {
        "HashCode": -1811598014,
        "Kind": "Components.Component",
        "Name": "BlazorDateRangePicker._Imports",
        "AssemblyName": "BlazorDateRangePicker",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker._Imports"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "BlazorDateRangePicker._Imports",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "_Imports",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1406132641,
        "Kind": "Components.Component",
        "Name": "Blazored.TextEditor.BlazoredTextEditor",
        "AssemblyName": "Blazored.TextEditor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazoredTextEditor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "EditorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "EditorContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToolbarContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ToolbarContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ReadOnly",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formats",
            "TypeName": "System.String[]",
            "Metadata": {
              "Common.PropertyName": "Formats",
              "Common.GloballyQualifiedTypeName": "global::System.String[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebugLevel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DebugLevel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazored.TextEditor.BlazoredTextEditor",
          "Common.TypeNamespace": "Blazored.TextEditor",
          "Common.TypeNameIdentifier": "BlazoredTextEditor"
        }
      },
      {
        "HashCode": 406747936,
        "Kind": "Components.Component",
        "Name": "Blazored.TextEditor.BlazoredTextEditor",
        "AssemblyName": "Blazored.TextEditor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Blazored.TextEditor.BlazoredTextEditor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "EditorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "EditorContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ToolbarContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ToolbarContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ReadOnly",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Theme",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Theme",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formats",
            "TypeName": "System.String[]",
            "Metadata": {
              "Common.PropertyName": "Formats",
              "Common.GloballyQualifiedTypeName": "global::System.String[]"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DebugLevel",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "DebugLevel",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Blazored.TextEditor.BlazoredTextEditor",
          "Common.TypeNamespace": "Blazored.TextEditor",
          "Common.TypeNameIdentifier": "BlazoredTextEditor",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -34923760,
        "Kind": "Components.ChildContent",
        "Name": "Blazored.TextEditor.BlazoredTextEditor.EditorContent",
        "AssemblyName": "Blazored.TextEditor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorContent",
            "ParentTag": "BlazoredTextEditor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazored.TextEditor.BlazoredTextEditor.EditorContent",
          "Common.TypeNamespace": "Blazored.TextEditor",
          "Common.TypeNameIdentifier": "BlazoredTextEditor",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -652443492,
        "Kind": "Components.ChildContent",
        "Name": "Blazored.TextEditor.BlazoredTextEditor.EditorContent",
        "AssemblyName": "Blazored.TextEditor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorContent",
            "ParentTag": "Blazored.TextEditor.BlazoredTextEditor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazored.TextEditor.BlazoredTextEditor.EditorContent",
          "Common.TypeNamespace": "Blazored.TextEditor",
          "Common.TypeNameIdentifier": "BlazoredTextEditor",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 723638951,
        "Kind": "Components.ChildContent",
        "Name": "Blazored.TextEditor.BlazoredTextEditor.ToolbarContent",
        "AssemblyName": "Blazored.TextEditor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ToolbarContent",
            "ParentTag": "BlazoredTextEditor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazored.TextEditor.BlazoredTextEditor.ToolbarContent",
          "Common.TypeNamespace": "Blazored.TextEditor",
          "Common.TypeNameIdentifier": "BlazoredTextEditor",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -406845793,
        "Kind": "Components.ChildContent",
        "Name": "Blazored.TextEditor.BlazoredTextEditor.ToolbarContent",
        "AssemblyName": "Blazored.TextEditor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ToolbarContent",
            "ParentTag": "Blazored.TextEditor.BlazoredTextEditor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Blazored.TextEditor.BlazoredTextEditor.ToolbarContent",
          "Common.TypeNamespace": "Blazored.TextEditor",
          "Common.TypeNameIdentifier": "BlazoredTextEditor",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1196944622,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView"
        }
      },
      {
        "HashCode": -883682373,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1674645258,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1276372657,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -610787263,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -11876164,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeRouteView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -369064797,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView"
        }
      },
      {
        "HashCode": -1318276660,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -753226098,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1629364531,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1357789001,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1294182684,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 477737744,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1274876818,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1849812484,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1799833828,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "AuthorizeView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1674956651,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState"
        }
      },
      {
        "HashCode": -1229547103,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1256124268,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -917463040,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Authorization",
          "Common.TypeNameIdentifier": "CascadingAuthenticationState",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1909027481,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -484949463,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 455330820,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1878100207,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "CascadingValue",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -280178114,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "DynamicComponent"
        }
      },
      {
        "HashCode": -1208518586,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "DynamicComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1672362120,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView"
        }
      },
      {
        "HashCode": 1603598356,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1779846409,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1961922207,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "LayoutView",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1987176480,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "RouteView"
        }
      },
      {
        "HashCode": -628179097,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout",
              "Common.GloballyQualifiedTypeName": "global::System.Type"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1824619779,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly",
              "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router"
        }
      },
      {
        "HashCode": -560774304,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly",
              "Common.GloballyQualifiedTypeName": "global::System.Reflection.Assembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IEnumerable<global::System.Reflection.Assembly>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.RouteData>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Routing.NavigationContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1553761883,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -138871260,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2090321047,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1980858994,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 203325183,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2081150942,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "Router",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 314183174,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "DataAnnotationsValidator"
        }
      },
      {
        "HashCode": 1513891469,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -727603034,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm"
        }
      },
      {
        "HashCode": -1211097885,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.EditContext>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1754422933,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 458556299,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "EditForm",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 575085979,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputCheckbox"
        }
      },
      {
        "HashCode": -1369825198,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.Boolean>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.Boolean>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1428459920,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputDate",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 701794543,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Forms.InputDateType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputDate",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 317310791,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputFile"
        }
      },
      {
        "HashCode": 2099109645,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputFile",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1558785226,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputNumber",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -2078556572,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputNumber",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1471150375,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadio",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -680549362,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadio",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 383843662,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -2091630296,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -350071147,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1561932995,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 593526376,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 775612551,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "TValue",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TValue>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2039246507,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1109696033,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1393686432,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputText"
        }
      },
      {
        "HashCode": -757269884,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1139177841,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputTextArea"
        }
      },
      {
        "HashCode": -1061171087,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<global::System.String>",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<global::System.String>>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 631239813,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationMessage",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1568822476,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Common.GloballyQualifiedTypeName": "global::System.Linq.Expressions.Expression<global::System.Func<TValue>>",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationMessage",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1563954274,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationSummary"
        }
      },
      {
        "HashCode": -1615156404,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model",
              "Common.GloballyQualifiedTypeName": "global::System.Object"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1305192833,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "FocusOnNavigate"
        }
      },
      {
        "HashCode": -51795550,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "FocusOnNavigate",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1305216631,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink"
        }
      },
      {
        "HashCode": -2142233509,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IReadOnlyDictionary<global::System.String, global::System.Object>"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Routing.NavLinkMatch"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1363566745,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -15009703,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Routing",
          "Common.TypeNameIdentifier": "NavLink",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1190557275,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "HeadContent"
        }
      },
      {
        "HashCode": 2000075973,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "HeadContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1380319242,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HeadContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "HeadContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 347848636,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "HeadContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2141019826,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadOutlet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "HeadOutlet"
        }
      },
      {
        "HashCode": 1604190234,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "HeadOutlet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2003890867,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "PageTitle"
        }
      },
      {
        "HashCode": -810584219,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "PageTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -957965238,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PageTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "PageTitle",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1094515282,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "PageTitle",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1110009368,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "ErrorBoundary"
        }
      },
      {
        "HashCode": 1001717185,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::System.Exception>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -884049429,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1684466167,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 102101931,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1257477910,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "ErrorBoundary",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -907968958,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize",
              "Common.GloballyQualifiedTypeName": "global::System.Single"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2034103973,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<global::Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize",
              "Common.GloballyQualifiedTypeName": "global::System.Single"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.ICollection<TItem>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount",
              "Common.GloballyQualifiedTypeName": "global::System.Int32"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1464533784,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1295534937,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 442879019,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1205622898,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1051841963,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2045216413,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web.Virtualization",
          "Common.TypeNameIdentifier": "Virtualize",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1003953870,
        "Kind": "Components.Component",
        "Name": "Plk.Blazor.DragDrop.Dropzone<TItem>",
        "AssemblyName": "Plk.Blazor.DragDrop",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Dropzone"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Plk.Blazor.DragDrop.Dropzone<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accepts",
            "TypeName": "System.Func<TItem, TItem, System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "Accepts",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, TItem, global::System.Boolean>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowsDrag",
            "TypeName": "System.Func<TItem, System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "AllowsDrag",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, global::System.Boolean>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragEnd",
            "TypeName": "System.Action<TItem>",
            "Metadata": {
              "Common.PropertyName": "DragEnd",
              "Common.GloballyQualifiedTypeName": "global::System.Action<TItem>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnItemDropRejected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnItemDropRejected",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnItemDrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnItemDrop",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnReplacedItemDrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnReplacedItemDrop",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InstantReplace",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "InstantReplace",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IList<TItem>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxItems",
            "TypeName": "System.Int32?",
            "Metadata": {
              "Common.PropertyName": "MaxItems",
              "Common.GloballyQualifiedTypeName": "global::System.Int32?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnItemDropRejectedByMaxItemLimit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnItemDropRejectedByMaxItemLimit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemWrapperClass",
            "TypeName": "System.Func<TItem, System.String>",
            "Metadata": {
              "Common.PropertyName": "ItemWrapperClass",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, global::System.String>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CopyItem",
            "TypeName": "System.Func<TItem, TItem>",
            "Metadata": {
              "Common.PropertyName": "CopyItem",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, TItem>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Plk.Blazor.DragDrop.Dropzone<TItem>",
          "Common.TypeNamespace": "Plk.Blazor.DragDrop",
          "Common.TypeNameIdentifier": "Dropzone",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -702428621,
        "Kind": "Components.Component",
        "Name": "Plk.Blazor.DragDrop.Dropzone<TItem>",
        "AssemblyName": "Plk.Blazor.DragDrop",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Plk.Blazor.DragDrop.Dropzone"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Plk.Blazor.DragDrop.Dropzone<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accepts",
            "TypeName": "System.Func<TItem, TItem, System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "Accepts",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, TItem, global::System.Boolean>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowsDrag",
            "TypeName": "System.Func<TItem, System.Boolean>",
            "Metadata": {
              "Common.PropertyName": "AllowsDrag",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, global::System.Boolean>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragEnd",
            "TypeName": "System.Action<TItem>",
            "Metadata": {
              "Common.PropertyName": "DragEnd",
              "Common.GloballyQualifiedTypeName": "global::System.Action<TItem>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnItemDropRejected",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnItemDropRejected",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnItemDrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnItemDrop",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnReplacedItemDrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnReplacedItemDrop",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InstantReplace",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "InstantReplace",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.IList<TItem>",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Common.GloballyQualifiedTypeName": "global::System.Collections.Generic.IList<TItem>",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxItems",
            "TypeName": "System.Int32?",
            "Metadata": {
              "Common.PropertyName": "MaxItems",
              "Common.GloballyQualifiedTypeName": "global::System.Int32?"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnItemDropRejectedByMaxItemLimit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "OnItemDropRejectedByMaxItemLimit",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.EventCallback<TItem>",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment<TItem>",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemWrapperClass",
            "TypeName": "System.Func<TItem, System.String>",
            "Metadata": {
              "Common.PropertyName": "ItemWrapperClass",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, global::System.String>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CopyItem",
            "TypeName": "System.Func<TItem, TItem>",
            "Metadata": {
              "Common.PropertyName": "CopyItem",
              "Common.GloballyQualifiedTypeName": "global::System.Func<TItem, TItem>",
              "Components.DelegateSignature": "True",
              "Components.IsDelegateAwaitableResult": "False",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Plk.Blazor.DragDrop.Dropzone<TItem>",
          "Common.TypeNamespace": "Plk.Blazor.DragDrop",
          "Common.TypeNameIdentifier": "Dropzone",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1517051274,
        "Kind": "Components.ChildContent",
        "Name": "Plk.Blazor.DragDrop.Dropzone<TItem>.ChildContent",
        "AssemblyName": "Plk.Blazor.DragDrop",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Dropzone"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Plk.Blazor.DragDrop.Dropzone<TItem>.ChildContent",
          "Common.TypeNamespace": "Plk.Blazor.DragDrop",
          "Common.TypeNameIdentifier": "Dropzone",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1664244377,
        "Kind": "Components.ChildContent",
        "Name": "Plk.Blazor.DragDrop.Dropzone<TItem>.ChildContent",
        "AssemblyName": "Plk.Blazor.DragDrop",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Plk.Blazor.DragDrop.Dropzone"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Plk.Blazor.DragDrop.Dropzone<TItem>.ChildContent",
          "Common.TypeNamespace": "Plk.Blazor.DragDrop",
          "Common.TypeNameIdentifier": "Dropzone",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1269289058,
        "Kind": "Components.Component",
        "Name": "Plk.Blazor.DragDrop._Imports",
        "AssemblyName": "Plk.Blazor.DragDrop",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Imports"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Plk.Blazor.DragDrop._Imports",
          "Common.TypeNamespace": "Plk.Blazor.DragDrop",
          "Common.TypeNameIdentifier": "_Imports"
        }
      },
      {
        "HashCode": -2062406554,
        "Kind": "Components.Component",
        "Name": "Plk.Blazor.DragDrop._Imports",
        "AssemblyName": "Plk.Blazor.DragDrop",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Plk.Blazor.DragDrop._Imports"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Plk.Blazor.DragDrop._Imports",
          "Common.TypeNamespace": "Plk.Blazor.DragDrop",
          "Common.TypeNameIdentifier": "_Imports",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1778059113,
        "Kind": "Components.Component",
        "Name": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel",
        "AssemblyName": "WMBlazorSlickCarousel",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorSlickCarousel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "BlazorSlickCarouselContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "BlazorSlickCarouselContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlazorSlickCarouselLoading",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "BlazorSlickCarouselLoading",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CustomClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainerCustomClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContainerCustomClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "addJquery",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "addJquery",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Configurations",
            "TypeName": "WMBSCInitialSettings",
            "Metadata": {
              "Common.PropertyName": "Configurations",
              "Common.GloballyQualifiedTypeName": "global::WMBSCInitialSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ProjectName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ProjectName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackAfterChange",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackAfterChange",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackBeforeChange",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackBeforeChange",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackBreakpoint",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackBreakpoint",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackDestroy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackDestroy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackEdge",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackEdge",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackInit",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackInit",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackReInit",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackReInit",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackSetPosition",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackSetPosition",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackSwipe",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackSwipe",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackLazyLoaded",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackLazyLoaded",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackLazyLoadError",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackLazyLoadError",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel",
          "Common.TypeNamespace": "WMBlazorSlickCarousel.WMBSC",
          "Common.TypeNameIdentifier": "BlazorSlickCarousel"
        }
      },
      {
        "HashCode": -2146842035,
        "Kind": "Components.Component",
        "Name": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel",
        "AssemblyName": "WMBlazorSlickCarousel",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "BlazorSlickCarouselContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "BlazorSlickCarouselContent",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlazorSlickCarouselLoading",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "BlazorSlickCarouselLoading",
              "Common.GloballyQualifiedTypeName": "global::Microsoft.AspNetCore.Components.RenderFragment",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Id",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Id",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CustomClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CustomClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainerCustomClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContainerCustomClass",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "addJquery",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "addJquery",
              "Common.GloballyQualifiedTypeName": "global::System.Boolean"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Configurations",
            "TypeName": "WMBSCInitialSettings",
            "Metadata": {
              "Common.PropertyName": "Configurations",
              "Common.GloballyQualifiedTypeName": "global::WMBSCInitialSettings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ProjectName",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ProjectName",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackAfterChange",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackAfterChange",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackBeforeChange",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackBeforeChange",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackBreakpoint",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackBreakpoint",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackDestroy",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackDestroy",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackEdge",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackEdge",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackInit",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackInit",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackReInit",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackReInit",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackSetPosition",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackSetPosition",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackSwipe",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackSwipe",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackLazyLoaded",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackLazyLoaded",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CallbackLazyLoadError",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CallbackLazyLoadError",
              "Common.GloballyQualifiedTypeName": "global::System.String"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel",
          "Common.TypeNamespace": "WMBlazorSlickCarousel.WMBSC",
          "Common.TypeNameIdentifier": "BlazorSlickCarousel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 421553208,
        "Kind": "Components.ChildContent",
        "Name": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselContent",
        "AssemblyName": "WMBlazorSlickCarousel",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorSlickCarouselContent",
            "ParentTag": "BlazorSlickCarousel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselContent",
          "Common.TypeNamespace": "WMBlazorSlickCarousel.WMBSC",
          "Common.TypeNameIdentifier": "BlazorSlickCarousel",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1416839969,
        "Kind": "Components.ChildContent",
        "Name": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselContent",
        "AssemblyName": "WMBlazorSlickCarousel",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorSlickCarouselContent",
            "ParentTag": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselContent",
          "Common.TypeNamespace": "WMBlazorSlickCarousel.WMBSC",
          "Common.TypeNameIdentifier": "BlazorSlickCarousel",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1711475918,
        "Kind": "Components.ChildContent",
        "Name": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselLoading",
        "AssemblyName": "WMBlazorSlickCarousel",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorSlickCarouselLoading",
            "ParentTag": "BlazorSlickCarousel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselLoading",
          "Common.TypeNamespace": "WMBlazorSlickCarousel.WMBSC",
          "Common.TypeNameIdentifier": "BlazorSlickCarousel",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1247844004,
        "Kind": "Components.ChildContent",
        "Name": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselLoading",
        "AssemblyName": "WMBlazorSlickCarousel",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorSlickCarouselLoading",
            "ParentTag": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "WMBlazorSlickCarousel.WMBSC.BlazorSlickCarousel.BlazorSlickCarouselLoading",
          "Common.TypeNamespace": "WMBlazorSlickCarousel.WMBSC",
          "Common.TypeNameIdentifier": "BlazorSlickCarousel",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1409097277,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 2142347575,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 838199886,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1794573893,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1053420571,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1127172063,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -135145180,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1924431878,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1797970611,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1333535738,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1656930696,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 838461312,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -731571908,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 681237169,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1642287762,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -580334942,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -840662209,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 72441158,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -448077727,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -711393851,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 150578328,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1010915749,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -155465752,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -992112387,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1712112468,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -456014662,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1054967987,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1122385903,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1095690125,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -876959658,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1751344360,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1640351294,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 739759441,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1260843602,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -398220374,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1903417421,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1859655707,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 641334219,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -423983166,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -633135058,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -131369159,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -2082732419,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1699311023,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -312523600,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -300492354,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1549497259,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1593058703,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1333669236,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 219608672,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 860289113,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -859354075,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1997803824,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1563716035,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -67198419,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1476221761,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -874838576,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -217793228,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 606002696,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 584309892,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1767719440,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1831969556,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1368748345,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1928602952,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 2134185647,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1767484269,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 267780483,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1646754705,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -687526225,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -446201736,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1885890205,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1278695418,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1185741214,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 2110316461,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -458851783,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1022059808,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -28013448,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1725674761,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1402869872,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1264996981,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1630507175,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -2113880096,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -2068416382,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 105254749,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -38979681,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1717484850,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1535803813,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 901709670,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 1935168956,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": 465578139,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -1471436580,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -578320901,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -333573618,
        "Kind": "Components.EventHandler",
        "Name": "ontoggle",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontoggle",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontoggle"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "EventHandlers"
        }
      },
      {
        "HashCode": -913785255,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "HashCode": -945494656,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.Razor",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting elements containing attributes with URL expected values.\n            </summary>\n            <remarks>Resolves URLs starting with '~/' (relative to the application's 'webroot' setting) that are not\n            targeted by other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s. Runs prior to other <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" />s to ensure\n            application-relative URLs are resolved.</remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "itemid",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "applet",
            "Attributes": [
              {
                "Name": "archive",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "area",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "audio",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "base",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "blockquote",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "formaction",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "del",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "embed",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "form",
            "Attributes": [
              {
                "Name": "action",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "html",
            "Attributes": [
              {
                "Name": "manifest",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "iframe",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "img",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "img",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "srcset",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "formaction",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "ins",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "href",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "menuitem",
            "Attributes": [
              {
                "Name": "icon",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "object",
            "Attributes": [
              {
                "Name": "archive",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "object",
            "Attributes": [
              {
                "Name": "data",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "q",
            "Attributes": [
              {
                "Name": "cite",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "source",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "source",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "srcset",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "track",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "video",
            "Attributes": [
              {
                "Name": "src",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          },
          {
            "TagName": "video",
            "Attributes": [
              {
                "Name": "poster",
                "Value": "~/",
                "ValueComparison": 2
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.Razor.TagHelpers",
          "Common.TypeNameIdentifier": "UrlResolutionTagHelper"
        }
      },
      {
        "HashCode": -80711778,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;a&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-host"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-protocol"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "a",
            "Attributes": [
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Controller"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Area"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Route\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />\n            is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-protocol",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The protocol for the URL, such as \"http\" or \"https\".\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Protocol"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-host",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The host name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Host"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL fragment name.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fragment"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if one of <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Action\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Controller\" />, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Area\" />\n            or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper.Page\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Route"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "AnchorTagHelper"
        }
      },
      {
        "HashCode": 1900564568,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;cache&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "cache"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "priority",
            "TypeName": "Microsoft.Extensions.Caching.Memory.CacheItemPriority?",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.Extensions.Caching.Memory.CacheItemPriority\" /> policy for the cache entry.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Priority"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryBy"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByHeader"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-query",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByQuery"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByRoute"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-cookie",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCookie"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-user",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByUser"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-culture",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCulture"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-on",
            "TypeName": "System.DateTimeOffset?",
            "Documentation": "\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresOn"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-after",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresAfter"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-sliding",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresSliding"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.CacheTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "CacheTagHelper"
        }
      },
      {
        "HashCode": 636951021,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that renders a Razor component.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "component",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "params",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "IndexerNamePrefix": "param-",
            "IndexerTypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets values for component parameters.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the component type. This value is required.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ComponentType"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "render-mode",
            "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.RenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.RenderMode\" />\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderMode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ComponentTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "ComponentTagHelper"
        }
      },
      {
        "HashCode": 2112440531,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> implementation targeting &lt;distributed-cache&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "distributed-cache",
            "Attributes": [
              {
                "Name": "name"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a unique name to discriminate cached entries.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:System.String\" /> to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryBy"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-header",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of HTTP request headers to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByHeader"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-query",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of query parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByQuery"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of route data parameters to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByRoute"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-cookie",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a comma-delimited set of cookie names to vary the cached result by.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCookie"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-user",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by the Identity for the logged in\n            <see cref=\"P:Microsoft.AspNetCore.Http.HttpContext.User\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByUser"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "vary-by-culture",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines if the cached result is to be varied by request culture.\n            <para>\n            Setting this to <c>true</c> would result in the result to be varied by <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />\n            and <see cref=\"P:System.Globalization.CultureInfo.CurrentUICulture\" />.\n            </para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "VaryByCulture"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-on",
            "TypeName": "System.DateTimeOffset?",
            "Documentation": "\n            <summary>\n            Gets or sets the exact <see cref=\"T:System.DateTimeOffset\" /> the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresOn"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-after",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration, from the time the cache entry was added, when it should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresAfter"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "expires-sliding",
            "TypeName": "System.TimeSpan?",
            "Documentation": "\n            <summary>\n            Gets or sets the duration from last access that the cache entry should be evicted.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpiresSliding"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "enabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value which determines if the tag helper is enabled or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Enabled"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.DistributedCacheTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "DistributedCacheTagHelper"
        }
      },
      {
        "HashCode": 1428139275,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;environment&gt; elements that conditionally renders\n            content based on the current value of <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            If the environment is not listed in the specified <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Names\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Include\" />,\n            or if it is in <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" />, the content will not be rendered.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "environment"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "names",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Names"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content should be rendered.\n            If the current environment is also in the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper.Exclude\" /> list, the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Include"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of environment names in which the content will not be rendered.\n            </summary>\n            <remarks>\n            The specified environment names are compared case insensitively to the current value of\n            <see cref=\"P:Microsoft.AspNetCore.Hosting.IHostingEnvironment.EnvironmentName\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Exclude"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.EnvironmentTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "EnvironmentTagHelper"
        }
      },
      {
        "HashCode": 1965453449,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;button&gt; elements and &lt;input&gt; elements with\n            their <c>type</c> attribute set to <c>image</c> or <c>submit</c>.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "button",
            "Attributes": [
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "image",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-action"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-controller"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-area"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-page-handler"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-fragment"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-all-route-data"
              }
            ]
          },
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "type",
                "Value": "submit",
                "ValueComparison": 1
              },
              {
                "Name": "asp-route-",
                "NameComparison": 1
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Controller"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Area"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fragment"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Route"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormActionTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "FormActionTagHelper"
        }
      },
      {
        "HashCode": -1531671241,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;form&gt; elements.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "form"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the action method.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-controller",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the controller.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Controller"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-area",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the area.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Area"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-page-handler",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the page handler.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageHandler"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-antiforgery",
            "TypeName": "System.Boolean?",
            "Documentation": "\n            <summary>\n            Whether the antiforgery token should be generated.\n            </summary>\n            <value>Defaults to <c>false</c> if user provides an <c>action</c> attribute\n            or if the <c>method</c> is <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.FormMethod.Get\" />; <c>true</c> otherwise.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Antiforgery"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fragment",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the URL fragment.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fragment"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-route",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Name of the route.\n            </summary>\n            <remarks>\n            Must be <c>null</c> if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Action\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper.Controller\" /> is non-<c>null</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Route"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-all-route-data",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "IndexerNamePrefix": "asp-route-",
            "IndexerTypeName": "System.String",
            "Documentation": "\n            <summary>\n            Additional parameters for the route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "FormTagHelper"
        }
      },
      {
        "HashCode": -310680862,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;img&gt; elements that supports file versioning.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "img",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-append-version"
              },
              {
                "Name": "src"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "src",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Source of the image.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Src"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to the src urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ImageTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "ImageTagHelper"
        }
      },
      {
        "HashCode": -1106561034,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;input&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The format string (see https://msdn.microsoft.com/en-us/library/txafckwd.aspx) used to format the\n            <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> result. Sets the generated \"value\" attribute to that formatted string.\n            </summary>\n            <remarks>\n            Not used if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is\n            <c>checkbox</c>, <c>password</c>, or <c>radio</c>. That is, <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is used when calling\n            <see cref=\"M:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator.GenerateTextBox(Microsoft.AspNetCore.Mvc.Rendering.ViewContext,Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExplorer,System.String,System.Object,System.String,System.Object)\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "type",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The type of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.IHtmlGenerator\" />\n            helper to call and the default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> value. A default <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.Format\" /> is not calculated\n            if the provided (see <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" />) or calculated \"type\" attribute value is <c>checkbox</c>,\n            <c>hidden</c>, <c>password</c>, or <c>radio</c>.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputTypeName"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The value of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine the generated \"checked\" attribute\n            if <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper.InputTypeName\" /> is \"radio\". Must not be <c>null</c> in that case.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "InputTagHelper"
        }
      },
      {
        "HashCode": -1021423406,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;label&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "label",
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LabelTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "LabelTagHelper"
        }
      },
      {
        "HashCode": 338777650,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;link&gt; elements that supports fallback href paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'href' attribute.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-href-include"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-href-exclude"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href-include"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-href-exclude"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-class"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-property"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-fallback-test-value"
              }
            ]
          },
          {
            "TagName": "link",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "asp-append-version"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Address of the linked resource.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Href"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-href-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HrefInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-href-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.HrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HrefExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of a CSS stylesheet to fallback to in the case the primary one fails.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackHref"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-suppress-fallback-integrity",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SuppressFallbackIntegrity"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean?",
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to the href urls.\n            </summary>\n            <remarks>\n            If <c>true</c> then a query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to fallback to in the case the primary\n            one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackHrefInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-href-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of CSS stylesheets to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackHrefExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-class",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The class name defined in the stylesheet to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestClass"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS property name to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestValue\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestProperty"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test-value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS property value to use for the fallback test.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestClass\" /> and <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackTestProperty\" />,\n            and either <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHref\" /> or <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper.FallbackHrefInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestValue"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.LinkTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "LinkTagHelper"
        }
      },
      {
        "HashCode": 16823562,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;option&gt; elements.\n            </summary>\n            <remarks>\n            This <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> works in conjunction with <see cref=\"T:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper\" />. It reads elements\n            content but does not modify that content. The only modification it makes is to add a <c>selected</c> attribute\n            in some cases.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "option"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies a value for the &lt;option&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "OptionTagHelper"
        }
      },
      {
        "HashCode": 1871271854,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            Renders a partial view.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "partial",
            "TagStructure": 2,
            "Attributes": [
              {
                "Name": "name"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name or path of the partial view that is rendered to the response.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Model\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The model to pass into the partial view. Cannot be used together with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.For\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "optional",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            When optional, executing the tag helper will no-op if the view cannot be located.\n            Otherwise will throw stating the view could not be found.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Optional"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "fallback-name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            View to lookup if the view specified by <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper.Name\" /> cannot be located.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackName"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "view-data",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary",
            "IndexerNamePrefix": "view-data-",
            "IndexerTypeName": "System.Object",
            "Documentation": "\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary\" /> to pass into the partial view.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ViewData"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PartialTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "PartialTagHelper"
        }
      },
      {
        "HashCode": -1916529512,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            A <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.TagHelper\" /> that saves the state of Razor components rendered on the page up to that point.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "persist-component-state",
            "TagStructure": 2
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "persist-mode",
            "TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistenceMode?",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper.PersistenceMode\" /> for the state to persist.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PersistenceMode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.PersistComponentStateTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "PersistComponentStateTagHelper"
        }
      },
      {
        "HashCode": 1565304183,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;script&gt; elements that supports fallback src paths.\n            </summary>\n            <remarks>\n            The tag helper won't process for cases with just the 'src' attribute.\n            </remarks>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-src-include"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-src-exclude"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-src"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-src-include"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-src-exclude"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-fallback-test"
              }
            ]
          },
          {
            "TagName": "script",
            "Attributes": [
              {
                "Name": "asp-append-version"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "src",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Address of the external script to use.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Src"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-src-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to load.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SrcInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-src-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from loading.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.SrcInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SrcExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The URL of a Script tag to fallback to in the case the primary one fails.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackSrc"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-suppress-fallback-integrity",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Boolean value that determines if an integrity hash will be compared with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrc\" /> value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SuppressFallbackIntegrity"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-append-version",
            "TypeName": "System.Boolean?",
            "Documentation": "\n            <summary>\n            Value indicating if file version should be appended to src urls.\n            </summary>\n            <remarks>\n            A query string \"v\" with the encoded content of the file is added.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppendVersion"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src-include",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to fallback to in the case the\n            primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackSrcInclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-src-exclude",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma separated list of globbed file patterns of JavaScript scripts to exclude from the fallback list, in\n            the case the primary one fails.\n            The glob patterns are assessed relative to the application's 'webroot' setting.\n            Must be used in conjunction with <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper.FallbackSrcInclude\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackSrcExclude"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-fallback-test",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The script method defined in the primary script to use for the fallback test.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "FallbackTestExpression"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ScriptTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "ScriptTagHelper"
        }
      },
      {
        "HashCode": 1986837493,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;select&gt; elements with <c>asp-for</c> and/or\n            <c>asp-items</c> attribute(s).\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          },
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "asp-items"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "asp-items",
            "TypeName": "System.Collections.Generic.IEnumerable<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>",
            "Documentation": "\n            <summary>\n            A collection of <see cref=\"T:Microsoft.AspNetCore.Mvc.Rendering.SelectListItem\" /> objects used to populate the &lt;select&gt; element with\n            &lt;optgroup&gt; and &lt;option&gt; elements.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.SelectTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "SelectTagHelper"
        }
      },
      {
        "HashCode": -1881256993,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting &lt;textarea&gt; elements with an <c>asp-for</c> attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "asp-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            An expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          },
          {
            "Kind": "ITagHelper",
            "Name": "name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the &lt;input&gt; element.\n            </summary>\n            <remarks>\n            Passed through to the generated HTML in all cases. Also used to determine whether <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper.For\" /> is\n            valid with an empty <see cref=\"P:Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression.Name\" />.\n            </remarks>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.TextAreaTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "TextAreaTagHelper"
        }
      },
      {
        "HashCode": 101921555,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-for</c>\n            attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "span",
            "Attributes": [
              {
                "Name": "asp-validation-for"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-validation-for",
            "TypeName": "Microsoft.AspNetCore.Mvc.ViewFeatures.ModelExpression",
            "Documentation": "\n            <summary>\n            Gets an expression to be evaluated against the current model.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationMessageTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "ValidationMessageTagHelper"
        }
      },
      {
        "HashCode": -1835477771,
        "Kind": "ITagHelper",
        "Name": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
        "AssemblyName": "Microsoft.AspNetCore.Mvc.TagHelpers",
        "Documentation": "\n            <summary>\n            <see cref=\"T:Microsoft.AspNetCore.Razor.TagHelpers.ITagHelper\" /> implementation targeting any HTML element with an <c>asp-validation-summary</c>\n            attribute.\n            </summary>\n        ",
        "CaseSensitive": false,
        "TagMatchingRules": [
          {
            "TagName": "div",
            "Attributes": [
              {
                "Name": "asp-validation-summary"
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "ITagHelper",
            "Name": "asp-validation-summary",
            "TypeName": "Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            If <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.All\" /> or <see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.ModelOnly\" />, appends a validation\n            summary. Otherwise (<see cref=\"F:Microsoft.AspNetCore.Mvc.Rendering.ValidationSummary.None\" />, the default), this tag helper does nothing.\n            </summary>\n            <exception cref=\"T:System.ArgumentException\">\n            Thrown if setter is called with an undefined <see cref=\"P:Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper.ValidationSummary\" /> value e.g.\n            <c>(ValidationSummary)23</c>.\n            </exception>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValidationSummary"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "ITagHelper",
          "Common.TypeName": "Microsoft.AspNetCore.Mvc.TagHelpers.ValidationSummaryTagHelper",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Mvc.TagHelpers",
          "Common.TypeNameIdentifier": "ValidationSummaryTagHelper"
        }
      },
      {
        "HashCode": -1664177957,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.Fallback": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components",
          "Common.TypeNameIdentifier": "Bind"
        }
      },
      {
        "HashCode": -1454246096,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -594669603,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -1964451060,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "checked",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "checkbox",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": 134251821,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "text",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -2000713033,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": 1957212188,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -1346263842,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -608672489,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -1611982347,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -1773403808,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": 1920988674,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -372096344,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -240039781,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -1648424138,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": -1161217299,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": 2013497420,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              },
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Web",
          "Common.TypeNameIdentifier": "BindAttributes"
        }
      },
      {
        "HashCode": 954234813,
        "Kind": "Components.Bind",
        "Name": "BlazorDateRangePicker.DateRangePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "Documentation": "Binds the provided expression to the 'StartDate' property and a change event delegate to the 'StartDateChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-StartDate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-StartDate:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-StartDate:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-StartDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Documentation": "Binds the provided expression to the 'StartDate' property and a change event delegate to the 'StartDateChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "StartDate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "StartDate",
          "Components.Bind.ChangeAttribute": "StartDateChanged",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker"
        }
      },
      {
        "HashCode": -210533915,
        "Kind": "Components.Bind",
        "Name": "BlazorDateRangePicker.DateRangePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "Documentation": "Binds the provided expression to the 'EndDate' property and a change event delegate to the 'EndDateChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-EndDate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-EndDate:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-EndDate:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-EndDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Documentation": "Binds the provided expression to the 'EndDate' property and a change event delegate to the 'EndDateChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "EndDate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "EndDate",
          "Components.Bind.ChangeAttribute": "EndDateChanged",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker"
        }
      },
      {
        "HashCode": 1408327276,
        "Kind": "Components.Bind",
        "Name": "BlazorDateRangePicker.DateRangePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "Documentation": "Binds the provided expression to the 'StartDate' property and a change event delegate to the 'StartDateChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-StartDate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "BlazorDateRangePicker.DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-StartDate:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-StartDate:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-StartDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Documentation": "Binds the provided expression to the 'StartDate' property and a change event delegate to the 'StartDateChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "StartDate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "StartDate",
          "Components.Bind.ChangeAttribute": "StartDateChanged",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 136811788,
        "Kind": "Components.Bind",
        "Name": "BlazorDateRangePicker.DateRangePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "Documentation": "Binds the provided expression to the 'EndDate' property and a change event delegate to the 'EndDateChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-EndDate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "BlazorDateRangePicker.DateRangePicker",
            "Attributes": [
              {
                "Name": "@bind-EndDate:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-EndDate:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-EndDate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTimeOffset?>",
            "Documentation": "Binds the provided expression to the 'EndDate' property and a change event delegate to the 'EndDateChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "EndDate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "EndDate",
          "Components.Bind.ChangeAttribute": "EndDateChanged",
          "Common.TypeName": "BlazorDateRangePicker.DateRangePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "DateRangePicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2099869539,
        "Kind": "Components.Bind",
        "Name": "BlazorDateRangePicker.TimePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "Documentation": "Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TimePicker",
            "Attributes": [
              {
                "Name": "@bind-Time",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "TimePicker",
            "Attributes": [
              {
                "Name": "@bind-Time:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Time:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Time",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>",
            "Documentation": "Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Time"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Time",
          "Components.Bind.ChangeAttribute": "TimeChanged",
          "Common.TypeName": "BlazorDateRangePicker.TimePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "TimePicker"
        }
      },
      {
        "HashCode": -1864503977,
        "Kind": "Components.Bind",
        "Name": "BlazorDateRangePicker.TimePicker",
        "AssemblyName": "BlazorDateRangePicker",
        "Documentation": "Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BlazorDateRangePicker.TimePicker",
            "Attributes": [
              {
                "Name": "@bind-Time",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "BlazorDateRangePicker.TimePicker",
            "Attributes": [
              {
                "Name": "@bind-Time:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Time:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Time",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.TimeSpan?>",
            "Documentation": "Binds the provided expression to the 'Time' property and a change event delegate to the 'TimeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Time"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Time",
          "Components.Bind.ChangeAttribute": "TimeChanged",
          "Common.TypeName": "BlazorDateRangePicker.TimePicker",
          "Common.TypeNamespace": "BlazorDateRangePicker",
          "Common.TypeNameIdentifier": "TimePicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 940313770,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputCheckbox"
        }
      },
      {
        "HashCode": -134438185,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 924036605,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputDate"
        }
      },
      {
        "HashCode": 563787065,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputDate",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1152978207,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputNumber"
        }
      },
      {
        "HashCode": -1128794172,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputNumber",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -941129997,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup"
        }
      },
      {
        "HashCode": 1190902328,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputRadioGroup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1131199490,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect"
        }
      },
      {
        "HashCode": 746287552,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputSelect",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -213728442,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputText"
        }
      },
      {
        "HashCode": -583474040,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -542402980,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputTextArea"
        }
      },
      {
        "HashCode": -1698353148,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value:get",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              },
              {
                "Name": "@bind-Value:set",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "get",
                "TypeName": "System.Object",
                "Documentation": "Specifies the expression to use for binding the value to the attribute.",
                "Metadata": {
                  "Common.PropertyName": "Get",
                  "Components.Bind.AlternativeNotation": "True"
                }
              },
              {
                "Name": "set",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies the expression to use for updating the bound value when a new value is available.",
                "Metadata": {
                  "Common.PropertyName": "Set"
                }
              },
              {
                "Name": "after",
                "TypeName": "System.Delegate",
                "Documentation": "Specifies an action to run after the new value has been set.",
                "Metadata": {
                  "Common.PropertyName": "After"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Common.TypeNamespace": "Microsoft.AspNetCore.Components.Forms",
          "Common.TypeNameIdentifier": "InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1840956964,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Ref",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref"
        }
      },
      {
        "HashCode": 1977609785,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 1000
  },
  "RootNamespace": "Workdo",
  "Documents": [
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\LayoutMail.razor",
      "TargetPath": "Shared\\LayoutMail.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_MailAction.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_MailAction.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\Login.razor",
      "TargetPath": "Pages\\Login.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\_ManagerCategory.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\_ManagerCategory.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_Survey.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_Survey.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\Settings.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\Settings.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_ModalConfirmation.razor",
      "TargetPath": "Pages\\MailBox\\_ModalConfirmation.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Create\\_Poll.razor",
      "TargetPath": "Pages\\MailBox\\Create\\_Poll.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\MailSideBar.razor",
      "TargetPath": "Shared\\MailSideBar.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Config\\_ModalData.razor",
      "TargetPath": "Pages\\MailBox\\Config\\_ModalData.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\Important.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\Important.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\Inbox.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\Inbox.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\LayoutLogin.razor",
      "TargetPath": "Shared\\LayoutLogin.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\Detail.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\Detail.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\_MemberItem.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\_MemberItem.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_MailHeader.razor",
      "TargetPath": "Pages\\MailBox\\_MailHeader.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\_Host.cshtml",
      "TargetPath": "Pages\\_Host.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\Sidebar.razor",
      "TargetPath": "Shared\\Sidebar.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_MailWriteZone.razor",
      "TargetPath": "Pages\\MailBox\\_MailWriteZone.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Create\\_ChoiceItem.razor",
      "TargetPath": "Pages\\MailBox\\Create\\_ChoiceItem.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_ReplyItem.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_ReplyItem.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Config\\_Item.razor",
      "TargetPath": "Pages\\MailBox\\Config\\_Item.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_Forward.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_Forward.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\_Actions.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\_Actions.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_LabelPicker.razor",
      "TargetPath": "Pages\\MailBox\\_LabelPicker.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\_ManagerGroup.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\_ManagerGroup.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_ActionMail.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_ActionMail.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_Statistical.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_Statistical.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_AddGroupMember.razor",
      "TargetPath": "Pages\\MailBox\\_AddGroupMember.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\_Category.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\_Category.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\_ManagerLabel.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\_ManagerLabel.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Create\\Create.razor",
      "TargetPath": "Pages\\MailBox\\Create\\Create.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\_Header.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\_Header.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\_ManagerSignature.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\_ManagerSignature.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\Logout.razor",
      "TargetPath": "Pages\\Logout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Config\\Category.razor",
      "TargetPath": "Pages\\MailBox\\Config\\Category.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\Label.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\Label.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\HeaderMain.razor",
      "TargetPath": "Shared\\HeaderMain.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\Home.razor",
      "TargetPath": "Pages\\Home.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_DropdownPoll.razor",
      "TargetPath": "Pages\\MailBox\\_DropdownPoll.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\Trash.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\Trash.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\_Pagination.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\_Pagination.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\Error.cshtml",
      "TargetPath": "Pages\\Error.cshtml",
      "FileKind": "mvc"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_Header.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_Header.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Settings\\_GroupItem.razor",
      "TargetPath": "Pages\\MailBox\\Settings\\_GroupItem.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\LayoutMain.razor",
      "TargetPath": "Shared\\LayoutMain.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\Sent.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\Sent.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\_Item.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\_Item.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\_AddMember.razor",
      "TargetPath": "Pages\\MailBox\\_AddMember.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Create\\_QuestionItem.razor",
      "TargetPath": "Pages\\MailBox\\Create\\_QuestionItem.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Shared\\PopupNoti.razor",
      "TargetPath": "Shared\\PopupNoti.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Create\\_ContentPoll.razor",
      "TargetPath": "Pages\\MailBox\\Create\\_ContentPoll.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Detail\\_MailActionsBar.razor",
      "TargetPath": "Pages\\MailBox\\Detail\\_MailActionsBar.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "c:\\Conando\\WorkdoTemplate\\Workdo\\Pages\\MailBox\\Mail\\Drafts.razor",
      "TargetPath": "Pages\\MailBox\\Mail\\Drafts.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.3"
}