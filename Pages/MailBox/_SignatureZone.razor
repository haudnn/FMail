<div class="is-padding-top-20" style="padding-bottom: 100px;">
    <div class="is-flex is-align-items-center is-gap-10-y">
        <span>Chữ ký:</span>
        <div class="dropdown is-up click @(toggleActiveSign ? " is-active" : "" )">
            <div class="dropdown-trigger is-hover drop-border" @onclick='ToggleActiveSign'>
                <div class=" is-flex is-align-items-center">
                    <span class="is-secondary-20 is-font-14">@(currentSignature.name != null ? currentSignature.name : "Không có chữ ký" )</span>
                    <span class="icon">
                        <i class="material-icons-sharp read">arrow_drop_down</i>
                    </span>
                </div>
            </div>
            <div class="dropdown-menu" style="min-width: 185px;">
                <div class="dropdown-content" style="padding: 10px;">
                    <div class="dropdown-item is-flex is-align-items-center is-gap-4"
                        @onclick="() => Choose(null)">
                        <span class="icon">
                            <i class="material-icons-sharp is_body2">@(currentSignature.name == null ? "done" : "")</i>
                        </span>
                        <span class="is_body2">Không có chữ ký</span>
                    </div>
                    @foreach ( var signature in signatures)
                    {
                    <div class="dropdown-item is-flex is-align-items-center is-gap-4"
                        @onclick="() => Choose(signature)">
                        <span class="icon">
                            <i class="material-icons-sharp is_body2">@(currentSignature.name != null && currentSignature.id == signature.id ? "done" : "")</i>
                        </span>
                        <span class="is_body2">@signature.name</span>
                    </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="is_sub2 is-secondary-10 pt-4">
        @((MarkupString)QuillHTMLContentSignature)
    </div>
</div>

@code{
    [CascadingParameter]
    public LayoutMain Layout { get; set; }
    string QuillHTMLContentSignature;  
    private bool toggleActiveSign = false;
    public SignatureModel currentSignature  = new SignatureModel();
    public List<SignatureModel> signatures =  new List<SignatureModel>();
    [Parameter] public EventCallback<SignatureModel> HandleChooseSignature  {get; set; }

    private void ToggleActiveSign()
    {
        toggleActiveSign = !toggleActiveSign;
    }

    protected override async Task OnInitializedAsync()
    {
        signatures = await SignatureData.GetAllSignatures(Layout.User.id);
        currentSignature = await SignatureData.GetDefaultSignature(Layout.User.id);
        QuillHTMLContentSignature = currentSignature?.body;
    }

    private async Task Choose(SignatureModel signature) 
    {
        if(signature == null) {
            currentSignature = new SignatureModel();
            QuillHTMLContentSignature = String.Empty;
            toggleActiveSign = !toggleActiveSign;
            return;
        }
        SignatureModel getSignature =  await SignatureData.GetSignatureById(signature.id);
        currentSignature = getSignature;
        await HandleChooseSignature.InvokeAsync(currentSignature);
        QuillHTMLContentSignature = getSignature.body;
        toggleActiveSign = !toggleActiveSign;

        StateHasChanged();
    }

}