<div class="dropdown  @directionDropdown @(toggleViewAdd.IsToggled ? "is-active" : "" )">
    <div class="dropdown-trigger" @onclick='HandleToggleViewAdd'>
        <div class="is-flex is-align-items-center is-pointer is-gap-8">
            <span class="icon is-primary-40 is-small">
                <i class="material-icons-outlined">add</i>
            </span>
            <span class="is-primary-40 is_caption" style="line-height: 16px;">Thêm nhóm người nhận</span>
        </div>
    </div>
    <div class="dropdown-menu" style="min-width: 250px;">
        <div class="dropdown-content is-flex is-flex-direction-column is-padding-20" style="height: 100%;">
            <div class="dropdown-item unhover is-flex is-align-items-center is-justify-content-space-between" style="padding: 0;">
                <span class="is_sub2 is-secondary-40">Thêm nhóm người nhận</span>
            </div>
            <div class="container-items-dropdown scrolly">
                <div class="dropdown-item unhover dropdown-header" style="padding: 20px 0 10px 0;">
                    <ul class="is-flex is-align-items-center is-flex-wrap-wrap is-gap-10-y">
                        @foreach (var group in groupsSelected)
                        {
                            <li class="is-flex is-align-items-center is-gap-8">
                                <span class="icon is-small" @onclick="() => HandlePickedGroup(group)">
                                    <i class="material-icons-outlined is-secondary-40">remove_circle_outline</i>
                                </span>
                                <div class="is-flex is-align-items-center is-gap-4">
                                    <span class="is_sub2 is-secondary-20">@group.name</span>
                                </div>
                            </li>  
                        }
                    </ul>
                    @if(groupsSelected.Count > 0) 
                    {
                        <div class="border-bottom" style="margin: 10px 0;"></div>
                    }

                </div>
                <div class="dropdown-item unhover is-padding-20-x is-flex-1" style="border-radius:0; padding-top: 0;">
                    <div class="is-flex is-align-items-center is-gap-10-y pb-4">
                        @if(toggleCheckBox.IsToggled) 
                        {
                            <span class="icon is-small is-primary-40" @onclick="HandleToggleCheckBox">
                                <i class="material-icons-outlined">check_box</i>
                            </span>
                        }
                        else
                        {
                            <span class="icon is-small is-primary-40" @onclick="HandleToggleCheckBox">
                                <i class="material-icons-outlined">check_box_outline_blank</i>
                            </span>
                        }
                        <span class="is_button is-primary-40 is-pointer">Chọn tất cả</span>
                    </div>
                    <ul class="is-flex is-flex-direction-column is-gap-8-x">
                        @foreach (var group in groups)
                        {
                            <li class="is-flex is-align-items-center is-gap-8">
                                <span class="icon is-small" @onclick="() => HandlePickedGroup(group)">
                                    <i class="material-icons-outlined is-secondary-40">add_circle_outline</i>
                                </span>
                                <span class="is_sub2 is-secondary-20">@group.name</span>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div
                class="dropdown-item unhover is-flex is-justify-content-flex-end is-align-content-center is-gap-10-y border-top" style="border-radius:0; padding: 20px 0px 0px 0px;">
                <div class="wrapper-button primary-btn" style="display: inline-flex"  @onclick="HandleUpdateGroups">
                    <span class="icon is-small has-text-white">
                        <i class="material-icons-outlined">done</i>
                    </span>
                    <span class="has-text-white is-font-12">Cập nhật</span>
                </div>
                <div class="wrapper-button error-btn" style="display: inline-flex" @onclick="HandleToggleViewAdd">
                    <span class="icon is-small has-text-white">
                        <i class="material-icons-sharp">close</i>
                    </span>
                    <span class="has-text-white is-font-12">Hủy</span>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
    [Parameter] public string directionDropdown {get; set;}
    [Parameter]
    public List<GroupModel> groups {get; set;} 
    [Parameter]
    public EventCallback<List<GroupModel>> HandleSelectedGroup { get; set; }
    public List<GroupModel> groupsSelected = new List<GroupModel>();

    private ToggleHelper toggleViewAdd = new ToggleHelper();
    private ToggleHelper toggleCheckBox = new ToggleHelper();


    private void HandleToggleViewAdd()
    {
        toggleViewAdd.Toggle();
    }


    private void HandleToggleCheckBox() 
    {
        toggleCheckBox.Toggle();
    }


    private void HandlePickedGroup(GroupModel group) 
    {
        if (!groupsSelected.Contains(group))
        {
            groupsSelected.Add(group);
            groups.Remove(group);
        }
        else
        {
            groupsSelected.Remove(group);
            groups.Add(group);
        }
    }



    private void HandleUpdateGroups() 
    {
        if(toggleCheckBox.IsToggled)
        {
            HandleSelectedGroup.InvokeAsync(groups);
            groups.Clear();
        }
        else 
        {
            HandleSelectedGroup.InvokeAsync(groupsSelected);
        }
        toggleViewAdd.Toggle();
        groupsSelected.Clear();
        toggleCheckBox.ToggleFalse();

    }
    
    
}