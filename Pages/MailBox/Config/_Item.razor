<li class="is-flex is-align-items-center is-justify-content-space-between is-padding-10-y border-bottom">
    <div class="is-flex is-align-items-center is-gap-10-y">
        <span class="is_sub2 is-secondary-20">@category.name</span>
    </div>
    <div class="is-flex is-align-items-center is-gap-10-y">
        <span class="icon is-pointer is-primary-40" @onclick="() => HandleToggleShowModalEdit(true)">
            <i class="material-icons-outlined">edit</i>
        </span>
        <span class="icon is-pointer is-error-60" @onclick="() => HandleToggleShowModalConfirm(true)">
            <i class="material-icons-outlined">delete</i>
        </span>
    </div>
</li>

    <_ModalConfirmation
        nameModal="Xác nhận việc xóa danh mục"
        contentButton="Xóa"
        contentModal="Thao tác này sẽ ảnh hưởng đến các thư nằm trong danh mục “Nhân sự”, bạn có chắc chắn muốn xóa không?"
        toggleActiveModal="@isShowModalConfirm"
        HandleToggleActiveModal="HandleToggleShowModalConfirm"
        HandleConfirmation="HandleConfirmDelete"
    />

    <_ModalData
        nameModal="Chỉnh sửa danh mục"
        contentButton="Cập nhật"
        toggleActiveModal="@isShowModalEdit"
        HandleToggleActiveModal="HandleToggleShowModalEdit"
        categoryName="@category.name"
        HandleConfirmation="HandleEdit"
    />

@code{

    [Parameter] 
    public CategoryModel category { get; set; }
    [Parameter]
    public EventCallback<CategoryModel> HandleDeleteCategory {get; set; }
    [Parameter]
    public EventCallback<CategoryModel> HandleEditCategory {get; set; }
    public bool isShowModalConfirm = false;
    public bool isShowModalAdd = false;
    public bool isShowModalEdit = false;

    public void HandleToggleShowModalConfirm(bool isShow) {
        isShowModalConfirm = isShow;
    }

    public void HandleToggleShowModalEdit(bool isShow) {
        isShowModalEdit = isShow;
    }
    public void HandleConfirmDelete(){
        HandleDeleteCategory.InvokeAsync(category);
        isShowModalConfirm = !isShowModalConfirm;
    }
    public void HandleEdit(string categoryNewName){
        CategoryModel categoryToEdit = new CategoryModel{
            id =  category.id,
            name = categoryNewName,
        };
        HandleEditCategory.InvokeAsync(categoryToEdit);
        isShowModalEdit = !isShowModalEdit;
    }
}