@using Plk.Blazor.DragDrop;
@inject ProtectedLocalStorage storage;

<div class="container-manager">
    <div class="is-mb-20">
        <span class="is-uppercase is_h6 is-secondary-10">Quản lí danh mục</span>
    </div>
    <Dropzone Items="categories">
        @if(@context.name != "Khác") 
        {
            <div class="is-flex is-align-items-center is-justify-content-space-between is-padding-10-y border-bottom">
                    <div class="is-flex is-align-items-center is-gap-10-y">
                        <span class="icon is-pointer is-secondary-10">
                            <i class="material-icons-outlined">drag_indicator</i>
                        </span>
                        <span class="is_sub2 is-secondary-20">@context.name</span>
                    </div>
            </div>
        }
    </Dropzone>


    <div class="is-flex is-align-items-center is-justify-content-space-between is-padding-10-y border-bottom">
        <span class="is_sub2 is-secondary-20">Khác</span>
    </div>

</div>
@code{
    [Parameter]
    public List<CategoryModel> categories { get; set;}
    [CascadingParameter]
    public LayoutMain Layout { get; set; }

    private async Task sortCategory(int currentPosition, int newPosition)
    {
        var categoriesStorage = await storage.GetAsync<List<string>>("categoriesSorted");
        var movedCategoryId = categories[currentPosition].id;
        categories[currentPosition].id = categories[newPosition].id;
        categories[newPosition].id = movedCategoryId;
        await storage.SetAsync("categoriesSorted", categories.Select(c => c.id).ToList());
        StateHasChanged();
    }
}