
<div class="dropdown @directionDropdown @(toggleViewAdd.IsToggled ? "is-active" : "" )">
    <div class="dropdown-trigger" @onclick='HandleToggleViewAdd'>
        <div class="is-flex is-align-items-center is-pointer is-gap-8">
            <span class="icon is-primary-40 is-small">
                <i class="material-icons-outlined">add</i>
            </span>
            <span class="is-primary-40 is_caption" style="line-height: 16px;">Thêm người nhận</span>
        </div>
    </div>
    <div class="dropdown-menu" style="min-width: 350px;">
        <div class="dropdown-content" style="padding-bottom: 0px; overflow: hidden;">
            <div class="dropdown-header" style="padding: 0 20px;">
                <div class="dropdown-item unhover is-flex is-align-items-center is-justify-content-space-between"
                    style="padding: 10px 0;">
                    <span class="is_sub2 is-secondary-40">Cập nhật người dùng</span>
                    <div class="dropdown">
                        <div class="dropdown-trigger is-hover drop-border" style="padding: 5px;">
                            <div class=" is-flex is-align-items-center">
                                <span class="is-secondary-20 is_caption">Tất cả phòng ban</span>
                                <span class="icon is-small is-secondary-20">
                                    <i class="material-icons-sharp ">arrow_drop_down</i>
                                </span>
                            </div>
                        </div>
                        <div class="dropdown-menu" style="min-width: 185px;">
                            <div class="dropdown-content" style="padding: 10px;">
                                <div class="dropdown-item is-flex is-align-items-center is-gap-4">
                                    <span class="icon"></span>
                                    <span class="is_body2">Không có chữ ký</span>
                                </div>
                                <div class="dropdown-item is-flex is-align-items-center is-gap-4">
                                    <span class="icon">
                                        <i class="material-icons-sharp is_body2">done</i>
                                    </span>
                                    <span class="is_body2">Chữ ký 1</span>
                                </div>
                                <div class="dropdown-item is-flex is-align-items-center is-gap-4">
                                    <span class="icon"></span>
                                    <span class="is_body2">Chữ ký 2</span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="dropdown-item unhover" style="padding: 10px 0;">
                    <div class="search-wrapper">
                        <input  @oninput="OnSearch" class="search-input" type="text" placeholder="Tìm người dùng...">
                        <span class="icon">
                            <i class="material-icons-outlined">search</i>
                        </span>
                    </div>
                </div>
            </div>
            <div class="container-items-dropdown scrolly">
                <div class="dropdown-item unhover" style="padding: 0 20px 10px 20px;">
                        <ul class="is-flex is-align-items-center is-flex-wrap-wrap" style="gap: 10px 10px">
                            @foreach (var member in membersSelected)
                            {
                                <li class="is-flex is-align-items-center is-gap-8">
                                    <span class="icon is-small" @onclick="() => HandlePickedMember(member)">
                                        <i class="material-icons-outlined is-secondary-40">remove_circle_outline</i>
                                    </span>
                                    <div class="is-flex is-align-items-center is-gap-4">
                                        <figure class="image is-24x24">
                                            <img class="is-rounded" src="@member.avatar">
                                        </figure>
                                        <span class="is_sub2 is-secondary-40">@member.name</span>
                                    </div>
                                </li>
                            }
                        </ul>
                </div>
                <div style="padding: 0 20px;">
                    <div class="divide-dropdown"></div>
                </div>
                <div class="dropdown-item unhover is-padding-20-x" style="border-radius:0; padding: 20px;">
                    <div class="is-flex is-align-items-center is-gap-10-y pb-4">
                        @if(toggleCheckBox.IsToggled) 
                        {
                            <span class="icon is-small is-primary-40" @onclick="HandleToggleCheckBox">
                                <i class="material-icons-outlined">check_box</i>
                            </span>
                        }
                        else
                        {
                            <span class="icon is-small is-primary-40" @onclick="HandleToggleCheckBox">
                                <i class="material-icons-outlined">check_box_outline_blank</i>
                            </span>
                        }
                        <span class="is_button is-primary-40 is-pointer">Chọn tất cả</span>
                    </div>
                    <ul class="is-flex is-flex-direction-column is-gap-10-x">
                        @foreach (var member in members)
                        {
                            <li class="is-flex is-align-items-center is-gap-8-y">
                                <span class="icon is-justify-content-start" @onclick="() => HandlePickedMember(member)">
                                    <i class="material-icons-outlined is-secondary-40">add_circle_outline</i>
                                </span>
                                <div class="is-flex is-align-items-center is-gap-4">
                                    <figure class="image is-24x24">
                                        <img class="is-rounded" src="@member.avatar">
                                    </figure>
                                    <span class="is_sub2 is-secondary-40">@member.name</span>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
            <div class="bottom-dropdown unhover">
                <div class="is-flex is-justify-content-flex-end is-align-content-center is-gap-10-y">
                    <div class="wrapper-button primary-btn" style="display: inline-flex" @onclick="HandleUpdateMembers">
                        <span class="icon is-small has-text-white">
                            <i class="material-icons-outlined">done</i>
                        </span>
                        <span class="has-text-white is-font-12">Cập nhật</span>
                    </div>
                    <div class="wrapper-button error-btn" style="display: inline-flex" @onclick='HandleToggleViewAdd'>
                        <span class="icon has-text-white is-small">
                            <i class="material-icons-sharp">close</i>
                        </span>
                        <span class="has-text-white is-font-12">Hủy</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public List<MemberModel> members {get; set;}
    public List<MemberModel> membersSelected = new List<MemberModel>();
    public string memberName = "";
    [Parameter]
    public string directionDropdown {get; set;}
    [Parameter]
    public EventCallback<List<MemberModel>> HandleSelectedMember { get; set; }
    [Parameter]
    public EventCallback<string> SearchMembers { get; set; }
    private ToggleHelper toggleViewAdd = new ToggleHelper();
    private ToggleHelper toggleCheckBox = new ToggleHelper();


    private void HandleToggleViewAdd()
    {
        toggleViewAdd.Toggle();
    }


    private void HandleToggleCheckBox() 
    {
        toggleCheckBox.Toggle();
    }



    private void HandlePickedMember(MemberModel member) 
    {
        if (!membersSelected.Contains(member))
        {
            membersSelected.Add(member);
            members.Remove(member);
        }
        else
        {
            membersSelected.Remove(member);
            members.Add(member);
        }
    }



    private void HandleUpdateMembers() 
    {
        if(toggleCheckBox.IsToggled)
        {
            HandleSelectedMember.InvokeAsync(members);
            members.Clear();
        }
        else 
        {
            HandleSelectedMember.InvokeAsync(membersSelected);
        }
        toggleViewAdd.Toggle();
        membersSelected.Clear();
        toggleCheckBox.ToggleFalse();
    }

    public void OnSearch(ChangeEventArgs e)
    {
        SearchMembers.InvokeAsync(e.Value.ToString());
        StateHasChanged();
    }
}
