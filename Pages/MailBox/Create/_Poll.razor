 @inject IJSRuntime JSRuntime
 <div class="pb-5">
        <div class="is-flex is-align-items-center" style="gap: 0 20px">
            <div class="search-wrapper poll">
                <span class="icon">
                    <i class="material-icons-outlined">edit</i>
                </span>
                <input class="search-input poll" type="text" @bind="poll.title" placeholder="Nhập tiêu đề khảo sát">
            </div>
            <div class="is-flex is-align-items-center" style="gap: 0 20px">
                <span class="is_body2 is-secondary-40">Thời gian kết thúc: </span>
                    <DateRangePicker
                        OnRangeSelect="OnRangeSelect"
                        SingleDatePicker="true" 
                        @bind-StartDate="StartDate"
                        TimePicker="true">
                        <PickerTemplate>
                            <div class="is-flex is-align-items-center is-gap-4">
                                <div id="@context.ParentId" @onclick="context.Toggle" style="cursor:pointer;">
                                    <div class="is-flex is-align-items-center">
                                        <span class="icon">
                                            <i class="material-icons-outlined is-secondary-10">calendar_today</i>
                                        </span>
                                        <span>@poll.endDate</span>
                                    </div>
                                </div>
                                <div id="@context.ParentId" @onclick="context.Toggle" style="cursor:pointer;">
                                    <div class="is-flex is-align-items-center">
                                        <span class="icon">
                                        <i class="material-icons-outlined is-secondary-10">schedule</i>
                                        </span>
                                        <span>@poll.endTime</span>
                                    </div>
                                </div>
                            </div>
                        </PickerTemplate>
                    </DateRangePicker>
            </div>
        </div>
        <div class="poll__content">
            <ul class="is-flex is-flex-direction-column" style="gap: 20px 0">
                @{
                    var questionIndex = 1;
                }
                @foreach (var question in poll.questions)
                {
                    <_QuestionItem 
                        questionIndex="questionIndex" 
                        question="@question" 
                        OnQuestionValueChanged="HandleQuestionValueChanged"
                        OnDeleteQuestion="HandleDeleteQuestion"
                        isMultipleChoice ="question.isMultipleChoice"
                        HandleChangeMultipleChoice="HandleChangeMultipleChoice"
                        />
                    questionIndex = questionIndex + 1;
                }
            </ul>
            <div class="is-flex is-align-items-center is-pointer is-padding-top-20 is-justify-content-center" @onclick="HandleAddQuestion">
                <span class="icon">
                    <i class="material-icons-outlined  is-primary-40">add</i>
                </span>
                <span class="is_button is-primary-40">Thêm câu hỏi</span>
            </div>
        </div>
        <div class="is-flex is-align-content-center is-padding-top-20 is-gap-10-y">
            <div class="wrapper-button primary-btn" style="display: inline-flex;" @onclick="HandleCreate">
                <span class="icon has-text-white">
                    <i class="material-icons-outlined">done</i>
                </span>
                <span class="is_caption">Cập nhật</span>
            </div>
            <div class="wrapper-button" style="display: inline-flex" @onclick="HandleCancleCreate">
                <span class="icon is-error-40">
                    <i class="material-icons-outlined">cancel</i>
                </span>
                <span class="is_caption is-error-40">Hủy</span>
            </div>
        </div>
    </div>

@code {

    [Parameter] 
    public EventCallback HandleToogleCreatePoll {get; set;}

    [Parameter] 
    public PollModel poll {get; set;}
    [Parameter] 
    public EventCallback<PollModel> HandelCreatePoll {get; set;}
    DateTimeOffset? StartDate { get; set; } = DateTime.Today;
    public void HandleAddQuestion()
    {
        poll.questions.Add(new QuestionModel
        {
            id = GenerateIDHelper.GenerateID("19012001"),
            text = "",
            isMultipleChoice = false,
            choices  = new List<ChoiceModel> 
                    {
                        new ChoiceModel {
                            id = GenerateIDHelper.GenerateID("19012001"),
                            text = "",
                        }
                    }
        });
    }


    private void HandleCancleCreate() 
    {
        HandleToogleCreatePoll.InvokeAsync();
    }


    private void HandleCreate() 
    {
        HandelCreatePoll.InvokeAsync();

    }


    private void HandleQuestionValueChanged(QuestionModel question) 
    {
        var questionToUpdate = poll.questions.FirstOrDefault(q => q.id == question.id);
        if (questionToUpdate != null) {
            questionToUpdate.text = question.text;
        }
    }



    private void HandleDeleteQuestion(QuestionModel question)
    { 
        var questionToDelete = poll.questions.FirstOrDefault(c => c.id == question.id);
        if (questionToDelete != null)
        {
            poll.questions.Remove(questionToDelete);
        }
    }



    private void HandleTitleChanged(ChangeEventArgs args) 
    {
        poll.title = args.Value.ToString();
    }


    public void HandleChangeMultipleChoice(QuestionChoice questionChange) 
    {
        QuestionModel questionToUpdate = poll.questions.FirstOrDefault(q => q.id == questionChange.id);
        if (questionToUpdate != null)
        {
            questionToUpdate.isMultipleChoice = questionChange.isMultipleChoice;
        }
    }

    
    public void OnRangeSelect(DateRange range)
    {
        poll.endDate = range.Start.ToString("dd/MM/yyyy");
        poll.endTime = range.Start.ToString("HH:mm");
    }

}