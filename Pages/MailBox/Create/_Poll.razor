@if(poll != null) 
{
    <div class="pb-5">
        <div class="is-flex is-align-items-center" style="gap: 0 20px">
            <div class="search-wrapper poll">
                <span class="icon">
                    <i class="material-icons-outlined">edit</i>
                </span>
                <input class="search-input poll" type="text" @bind-value="title" placeholder="Nhập tiêu đề khảo sát">
            </div>
            <div class="is-flex is-align-items-center" style="gap: 0 20px">
                <span class="is_body2 is-secondary-40">Thời gian kết thúc: </span>
                <div class="is-flex is-align-items-center is-gap-4">
                    <div class="is-flex is-align-items-center">
                        <span class="icon">
                            <i class="material-icons-outlined is-secondary-10">calendar_today</i>
                        </span>
                        <div class="poll-date-picker">
                            <DateRangePicker SingleDatePicker="true" placeholder="dd/mm/yyyy" />
                        </div>
                    </div>
                    <div class="is-flex is-align-items-center">
                        <span class="icon">
                            <i class="material-icons-outlined is-secondary-10">schedule</i>
                        </span>
                        <div class="poll-date-picker">
                            <DateRangePicker SingleDatePicker="true" placeholder="hh:mm" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="poll__content">
            <ul class="is-flex is-flex-direction-column" style="gap: 20px 0">
                  @{
                    var questionIndex = 1;
                }
                @foreach (var question in poll.questions)
                {
                    <_QuestionItem questionIndex="questionIndex"/>
                    questionIndex = questionIndex + 1;
                }
            </ul>
            <div class="is-flex is-align-items-center is-pointer is-padding-top-20 is-justify-content-center" @onclick="HandleAddQuestion">
                <span class="icon">
                    <i class="material-icons-outlined  is-primary-40">add</i>
                </span>
                <span class="is_button is-primary-40">Thêm câu hỏi</span>
            </div>
        </div>
        <div class="is-flex is-align-content-center is-padding-top-20 is-gap-10-y">
            <div class="wrapper-button primary-btn" style="display: inline-flex;" @onclick="HandleCreate">
                <span class="icon has-text-white">
                    <i class="material-icons-outlined">done</i>
                </span>
                <span class="is_caption">Cập nhật</span>
            </div>
            <div class="wrapper-button" style="display: inline-flex" @onclick="HandleCancleCreate">
                <span class="icon is-error-40">
                    <i class="material-icons-outlined">cancel</i>
                </span>
                <span class="is_caption is-error-40">Hủy</span>
            </div>
        </div>
    </div>

}

@code {

    private PollModel poll;

    public string title = String.Empty;
    
    [Parameter] 
    public EventCallback HandleToogleCreatePoll {get; set;}
    [Parameter] 
    public EventCallback HandelCreatePoll {get; set;}

    protected override async Task OnInitializedAsync()
    {
        poll = new PollModel
        {
            title = "",
            questions = new List<QuestionModel>
            {
                new QuestionModel
                {
                    text = "",
                    isMultipleChoice = false
                }
            }
        };
    }
    public void HandleAddQuestion()
    {
        poll.questions.Add(new QuestionModel
        {
            text = "",
            isMultipleChoice = false
        });
    }
    private void HandleCancleCreate() {
        HandleToogleCreatePoll.InvokeAsync();
    }
    private void HandleCreate() {
        HandelCreatePoll.InvokeAsync();
    }
}