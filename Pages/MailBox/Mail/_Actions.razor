<div class="mail__footer-actions">
    <div class="is-flex is-align-items-center is-pointer" style="gap: 0 8px;" @onclick="HandleCancleSelect">
        <span class="icon is-small">
            <i class="material-icons-sharp is-secondary-60">check_box</i>
        </span>
        <label class="is-pointer is_body2 is-secondary-10">@mailCount thư được chọn</label>
    </div>
    <div class="is-flex is-align-items-center" style="gap: 0 10px;">
        <div class="is-flex is-align-items-center is-pointer">
            <div class="dropdown is-up is-right click @(toggleShowAction.IsToggled ? "is-active" : "" )">
                <div class="dropdown-trigger" @onclick='HandelToggleShowAction'>
                    <span class="icon">
                        <i class="material-icons-outlined read">more_vert</i>
                    </span>
                    <span class="read">Hành động khác</span>
                </div>
                <div class="dropdown-menu" style="width: 250px;">
                    <div class="dropdown-content px-3" style="z-index: 20;">
                        <div class="dropdown-item unhover is-flex is-align-items-center"
                            style="gap: 0 5px; padding: 5px;">
                            <span class="icon">
                                <i class="material-icons-outlined read">drafts</i>
                            </span>
                            <span class="read has-text-weight-medium">Đánh dấu đã đọc</span>
                        </div>
                        <div class="dropdown-item unhover is-flex is-align-items-center"
                            style="gap: 0 5px; padding: 5px;">
                            <span class="icon">
                                <i class="material-icons-outlined read">drafts</i>
                            </span>
                            <span class="read has-text-weight-medium">Đánh dấu chưa đọc</span>
                        </div>
                        <div class="dropdown-item unhover is-flex is-align-items-center"
                            style="gap: 0 5px; padding: 5px;">
                            <span class="icon">
                                <i class="material-icons-sharp read">star</i>
                            </span>
                            <span class="read has-text-weight-medium">Đánh dấu quan trọng</span>
                        </div>
                        <div class="dropdown-item unhover is-flex is-align-items-center"
                            style="gap: 0 5px; padding: 5px;">
                            <span class="icon">
                                <i class="material-icons-outlined read">star_outline</i>
                            </span>
                            <span class="read has-text-weight-medium">Đánh dấu không quan trọng</span>
                        </div>
                        <div class="dropdown-item unhover is-flex is-align-items-center"
                            style="gap: 0 5px; padding: 5px;" @onclick='HandelToggleShowLabels'>
                            <span class="icon">
                                <i class="material-icons-sharp read">label_outline</i>
                            </span>
                            <span class="read has-text-weight-medium">Gắn nhãn</span>
                        </div>
                    </div>

                </div>
            </div>
        </div>
        <div class="dropdown is-up is-right @(toggleShowLabels.IsToggled ? "is-active" : "" )">
            <div class="dropdown-menu" style="width: 250px; right: 270px; bottom: 50px ;border-radius: 8px;">
                <div class="dropdown-content filter-label">
                    <div class="dropdown__header">Danh sách nhãn</div>
                    <ul class="is-flex is-flex-direction-column is-gap-10-x" style="padding-bottom: 40px;">
                        @foreach (var label in labels)
                        {
                            <li class="dropdown-item filter is-flex is-align-items-center px-0 py-0 is-gap-8">
                                @if(labelsSelected.Contains(label.id)) {
                                    <span class="icon is-small" @onclick="() => HandelToggleIconCheckbox(label.id)">
                                        <i class="material-icons-sharp is-secondary-40">check_box</i>
                                    </span>  
                                }
                                else { 
                                    <span class="icon is-small" @onclick="() => HandelToggleIconCheckbox(label.id)">
                                        <i class="material-icons-outlined is-secondary-40">check_box_outline_blank</i>
                                    </span>
                                }
                                <div class="is-flex is-align-items-center">
                                    <span class="icon">
                                        <i class="material-symbols-sharp" style="color: @label.color">label</i>
                                    </span>
                                    <span class="is_body2 is-secondary-10">@label.name</span>
                                </div>
                            </li>
                        }
                    </ul>
                    <div class="is-flex is-align-items-center is-justify-content-flex-end" style="gap: 0 10px;">
                        <div class="wrapper-button" @onclick="HandelToggleShowLabels" style="max-height: 24px;">
                            <span class="is_caption is-error-60">Hủy</span>
                        </div>
                        <div class="wrapper-button primary-btn" style="max-height: 24px;">
                            <span class="icon has-text-white">
                                <i class="material-icons-outlined">check</i>
                            </span>
                            <span class="has-text-white is_caption">Cập nhật</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @if(isTrashMails) {
            <div class="is-flex is-align-items-center is-pointer mail__footer-drafs restore">
                <span class="icon is-secondary-40">
                    <i class="material-icons-outlined">mark_email_read</i>
                </span>
                <span class="is-secondary-40 is_caption">Khôi phục thư</span>
            </div>
            <div class="is-flex is-align-items-center is-pointer mail__footer-drafs" @onclick="TrashMails">
                <span class="icon has-text-white">
                    <i class="material-icons-outlined">delete_forever</i>
                </span>
                <span class="has-text-white is_caption">Xóa vĩnh viễn</span>
            </div>
        }
        else{ 
            <div class="is-flex is-align-items-center is-pointer mail__footer-drafs" @onclick="TrashMails">
                <span class="icon has-text-white">
                    <i class="material-icons-outlined">delete_forever</i>
                </span>
                <span class="has-text-white is_caption">Chuyển vào thùng rác</span>
            </div>
        }

    </div>
</div>
@code {
    private ToggleHelper toggleShowAction = new ToggleHelper();
    private ToggleHelper toggleIconCheckbox = new ToggleHelper();
    private ToggleHelper toggleShowLabels = new ToggleHelper();
    private List<string> labelsSelected = new List<string>();
    [Parameter] 
    public List<LabelModel> labels { get; set; }
    [Parameter]
    public int mailCount { get; set; } 
    [Parameter]
    public EventCallback HandleCancelSelectedMail { get; set; }
    [Parameter]
    public EventCallback HandleTrashMails { get; set; }
    [Parameter]
    public bool isTrashMails { get; set; }
    private void HandelToggleShowAction() { 
        toggleShowAction.Toggle();
        if (toggleShowLabels.IsToggled)
        {
            toggleShowLabels.Toggle();
        }
    }
    private void HandelToggleIconCheckbox(string id) {
        if (!labelsSelected.Contains(id))
        {
            labelsSelected.Add(id);
        }
        else if (labelsSelected.Contains(id))
        {
            labelsSelected.Remove(id);
        }
    }
    private void HandelToggleShowLabels() { 
        toggleShowLabels.Toggle();
    }
    
    private void HandleCancleSelect() {
        HandleCancelSelectedMail.InvokeAsync();
    }
    private void TrashMails() { 
        HandleTrashMails.InvokeAsync();
    }
}