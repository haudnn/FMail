@inject IJSRuntime JSRuntime
<div class="columns">
    <div class="column is-6">
        <div class="is-flex is-align-items-center is-gap-10-y">
            <figure class="image is-32x32 is-rounded">
                <img src="@author.avatar">
            </figure>
            <div>
                <p class="is_body1 is-secondary-10">@author.FullName</p>
                <div class="is-flex is-align-items-center is-gap-4">
                    <span class="is_caption is-secondary-10">Đến</span>
                    <ul class="is-flex is-align-items-center is-gap-4 container-cc-list">
                        @foreach (var item in to)
                        {
                            <li>
                                <span class="is_caption is-secondary-40">@item.name</span>
                            </li>
                        }
                    </ul>
                    <div class="dropdown is-left @(toggleViewDetail.IsToggled ? " is-active" : "" )">
                        <div class="dropdown-trigger is-flex is-align-items-center" @onclick="HandleToggleViewDetail">
                            <span class="icon is-small">
                                <i class="material-icons-outlined is-primary-40">arrow_drop_down</i>
                            </span>
                        </div>
                        <div class="dropdown-menu" style="top: 20px; min-width: 400px;">
                            <div class="dropdown-content is-padding-20">
                                <div class="is-flex is-mb-10">
                                    <span class="is_body2 is-secondary-10 is-block" style="width: 55px;">Từ:</span>
                                    <div class="is-flex-1 is-flex is-align-items-center" style="gap: 0 5px">
                                        <span class="is_sub2 is-secondary-10">@author.FullName</span>
                                        <span class="is_caption is-secondary-10">@( "<" + author.email + ">" )</span>
                                    </div>
                                </div>
                                <div class="is-flex is-mb-10">
                                    <span class="is_body2 is-secondary-10 is-block" style="width: 55px;">Đến:</span>
                                    <div class="is-flex-1">
                                        @foreach (var item in to)
                                        {
                                            <span class="is-has-virgule is_caption is-secondary-40">@item.name</span>
                                        }
                                    </div>
                                </div>
                                @* <div class="is-flex is-mb-10">
                                    <span class="is_body2 is-secondary-10 is-block" style="width: 55px;">CC:</span>
                                    <div class="is-flex-1">
                                        @foreach (var item in cc)
                                        {  
                                            <span class="is-has-virgule is_caption is-secondary-40">@item.name</span> 
                                        }
                                    </div>
                                </div> *@
                                <div class="is-flex is-align-items-center">
                                    <p class="is_body2 is-secondary-10" style="width: 55px;">Ngày:</p>
                                    <div class="is-flex-1 is-flex is-align-items-center">
                                        <span class="is_caption is-secondary-40">@sentDate</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="column is-6">
        <_ActionMail/>
    </div>
</div>

@code {
    [Parameter]
    public UserModel author { get; set;} 
    [Parameter]
    public string sentDate { get; set; }
    [Parameter]
    public List<MemberModel> to { get; set; }

    @* [Parameter]
    public List<MemberModel> cc { get; set; } *@
    [Parameter]
    public EventCallback<string> SetCurrentAction { get; set; }
    
    private ToggleHelper toggleViewButtonAnother = new ToggleHelper();
    private ToggleHelper toggleViewDetail = new ToggleHelper();

    private void HandleToggleButtonAnother() 
    {
        toggleViewButtonAnother.Toggle();
    }


    private void HandleToggleViewDetail() 
    {
        toggleViewDetail.Toggle();  
    }

    
    private async Task HandleClickAction(string actionName)
    {
        await SetCurrentAction.InvokeAsync(actionName);
    }

}
