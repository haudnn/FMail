@inject IJSRuntime JSRuntime
<div class="columns">
        <div class="column is-6">
            <div class="is-flex is-align-items-center is-gap-10-y">
                <figure class="image is-32x32 is-rounded">
                    <img style="min-width: 32px; min-height:  32px;" src="@author.avatar">
                </figure>
                <div>
                    <p class="is_body1 is-secondary-10">@author.FullName</p>
                    <div  class="is-flex is-align-items-center is-gap-4">
                        <span style="line-height: 21px;" class="is_caption is-secondary-10">Đến</span>
                        <ul class="is-flex is-align-items-center is-gap-4 container-cc-list">
                            @foreach (var item in toList)
                            {
                                
                                <li>
                                    <span class="is_caption is-secondary-40">@item.name</span>
                                </li>
                            }
                            @foreach (var item in ccList)
                            {
                                <li>
                                    <span class="is_caption is-secondary-40">, cc:</span>
                                </li>
                                <li>
                                    <span class="is_caption is-secondary-40">@item.name</span>
                                </li>
                            }
                            @foreach (var item in bccList)
                            {
                                <li>
                                    <span class="is_caption is-secondary-40">, bcc:</span>
                                </li>
                                <li>
                                    <span class="is_caption is-secondary-40">@item.name</span>
                                </li>
                            }

                        </ul>
                        <div class="dropdown is-left @(toggle.IsToggled ? " is-active" : "" )">
                            <div class="dropdown-trigger is-flex is-align-items-center" @onclick="Toggle">
                                <span class="icon is-small">
                                    <i class="material-icons-outlined is-primary-40">arrow_drop_down</i>
                                </span>
                            </div>
                            <div class="dropdown-menu" style="top: 20px; min-width: 400px;">
                                <div class="dropdown-content is-padding-20">
                                    <div class="is-flex is-mb-10">
                                        <span class="is_body2 is-secondary-10 is-block"style="width: 60px; white-space: nowrap;">Từ:</span>
                                        <div class="is-flex-1 is-flex is-align-items-center" style="gap: 0 5px">
                                            <span class="is_sub2 is-secondary-10">@author.FullName</span>
                                            <span class="is_caption is-secondary-10">@( "<" + author.email + ">" )</span>
                                        </div>
                                    </div>
                                    @if (toList.Count > 0)
                                    {
                                        <div class="is-flex is-mb-10">
                                            <span class="is_body2 is-secondary-10 is-block" style="width: 60px; white-space: nowrap;">Đến:</span>
                                            <div class="is-flex-1">
                                                @foreach (var item in toList)
                                                {
                                                    <span style="line-height: 17px;" class="is-has-virgule is_caption is-secondary-40">@item.name</span>
                                                }
                                            </div>
                                        </div>
                                    }
                                    @if(ccList.Count > 0) 
                                    {
                                        <div class="is-flex is-mb-10">
                                            <span class="is_body2 is-secondary-10 is-block" style="width: 60px; white-space: nowrap;">CC:</span>
                                            <div class="is-flex-1">
                                                @foreach (var item in ccList)
                                                {  
                                                    <span style="line-height: 17px;" class="is-has-virgule is_caption is-secondary-40">@item.name</span> 
                                                }
                                            </div>
                                        </div>
                                    }
                                    @if(bccList.Count > 0)
                                    {
                                        <div class="is-flex is-mb-10">
                                            <span class="is_body2 is-secondary-10 is-block" style="width: 60px; white-space: nowrap;">BCC:</span>
                                            <div class="is-flex-1">
                                                @foreach (var item in bccList)
                                                {  
                                                    <span style="line-height: 17px;" class="is-has-virgule is_caption is-secondary-40">@item.name</span> 
                                                }
                                            </div>
                                        </div>
                                    }
                                        <div class="is-flex">
                                        <p class="is_body2 is-secondary-10" style="width: 60px; white-space: nowrap;">Tiều đề:</p>
                                        <div class="is-flex-1">
                                            <span style="line-height: 17px;" class="is-block is-has-virgule is_caption is-secondary-40">@mail.subject</span> 
                                        </div>
                                    </div>
                                    <div class="is-flex is-align-items-center">
                                        <p class="is_body2 is-secondary-10" style="width: 60px; white-space: nowrap;">Ngày:</p>
                                        <div class="is-flex-1 is-flex is-align-items-center">
                                                <span class="is_body2 is-secondary-40">@sentDateTime.ToString("HH:mm")</span>
                                                <span class="mr-1">,</span>
                                                <span class="is_body2 is-secondary-40">@sentDateTime.ToString("dd/MM/yyyy")</span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="column is-6">
            <!-- Set các hành động: trả lời, trả lờ tất cả, chuyển tiếp -->
            <!-- Trường mail id dùng để xác định đang thực hiện action với mail nào -->
            <_Actions 
                sentDateTime="@sentDateTime" 
                convertDate="@convertDate" 
                SetCurrentAction="SetCurrentAction"
                mailId="@mail.id"
            />
        </div>
</div>


@code {
    // Xác định thông tin người gửi
    [Parameter] public UserModel author {get; set;} = new UserModel();
    // Set các hành động: trả lời, trả lờ tất cả, chuyển tiếp
    [Parameter] public EventCallback<ActionModel> SetCurrentAction { get; set; }
    [Parameter] public MailModel mail { get; set; } = new MailModel();
    private ToggleHelper toggle = new ToggleHelper();
    
    // Danh sách to cc bcc
    public List<MemberModel> toList = new List<MemberModel>();
    public List<MemberModel> ccList = new List<MemberModel>();
    public List<MemberModel> bccList = new List<MemberModel>();
    private bool shouldRender = false;
        
    public DateTime sentDateTime;
    public string convertDate; 

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InvokeAsync(StateHasChanged);
        }
        else
        {
            if(!String.IsNullOrEmpty(mail.sentDate))
            {
                sentDateTime = DateTime.Parse(mail.sentDate);
                convertDate = SharedHelper.ConvertDate(sentDateTime);
                toList = InitDataFakeHelper.GetMembersById(mail.to);
                ccList = InitDataFakeHelper.GetMembersById(mail.cc);
                bccList = InitDataFakeHelper.GetMembersById(mail.bcc);

            }
             await InvokeAsync(StateHasChanged);
        }
 
    }


    private void Toggle() 
    {
        toggle.Toggle();  
    }

}





