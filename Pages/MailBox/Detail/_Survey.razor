<div class="poll__content" style="margin: 0; border-top-left-radius: 0;">
    <ul class="is-flex is-flex-direction-column" style="gap: 20px 0">
        @{
            var index = 1;
        }
        @foreach (var question in questions)
        {
            <li>
                <div class="is-flex is-align-items-center is-gap-8">
                    <span class="is_sub2">@index.</span>
                    <p class="is_sub2 is-secondary-20">@question.text</p>
                </div>
                <div class="control is-mt-10 is-flex is-flex-direction-column is-gap-10-x">
                    @foreach (var choice in question.choices)
                    {
                        <_ChoiceItem
                            choice="choice"
                            question="question"
                            OnVote="Vote"
                            isStopped="isStopped"
                        />
                    }
                </div>
            </li>
            index++;
        }
    </ul>
</div>
@code{
    [CascadingParameter] public LayoutMain Layout { get; set; }
    [Parameter] public PollModel poll { get; set; } = new PollModel();
    [Parameter] public bool isStopped { get; set; }
    [Parameter] public List<QuestionModel> questions { get; set; }

    

    // Hàm xử lý user chọn đáp án
    public async Task Vote(QuestionChoice question)
    {
        var choiceId = question.choiceId;
        var questionId = question.id;
        // Tìm câu hỏi được chọn
        var foundQuestion = poll.questions.FirstOrDefault(q => q.id == questionId);
        // Tìm đáp án được chọn
        var foundChoice = foundQuestion.choices.FirstOrDefault(c => c.id == choiceId);


        // Nếu đây là câu hỏi nhiều đáp án
        if (foundQuestion.isMultipleChoice)
        {
            // Có thì xóa
            if (foundChoice.voters.Contains(Layout.User.id))
            {
                foundChoice.voters.Remove(Layout.User.id);
            }
            // Không có thì thêm
            else
            {
                foundChoice.voters.Add(Layout.User.id);
            }
        }

        // Nếu đây là câu hỏi 1 đáp án
        else
        {
            // Xóa đáp án đã chọn trước đó và câp nhật
            foreach (var choice in foundQuestion.choices)
            {
                if (choice.id == choiceId)
                {
                    if (!choice.voters.Contains(Layout.User.id))
                    {
                        choice.voters.Add(Layout.User.id);
                    }
                }
                else
                {
                    choice.voters.Remove(Layout.User.id);
                }
            }
        }
        await PollData.Vote(poll);
    }


}