<div class="is-padding-20-x">
    <div class="is-flex is-align-items-center" style="gap: 0 12px">
        <figure class="image is-36x36">
            <img src="images/avatar-mail.png">
        </figure>
        <div class="is-flex is-flex-direction-column" style="gap: 5px 0">
            <p class="is_sub2 is-secondary-10">@displayName</p>
            <div class="is-flex is-align-items-center is-flex-wrap-wrap" style="gap: 10px 20px">
                <div class="dropdown is-left @(toggleViewAllActions.IsToggled ? " is-active" : "" )">
                    <div class="dropdown-trigger" @onclick="HandleToggleViewAllActions">
                        <div class="is_flex is-flex-wrap-wrap is-gap-10-y">
                            <div class="is-flex is-align-items-center is-pointer">
                                <div class="is-flex is-align-items-center" style="gap: 0 5px">
                                    <span class="icon is-small is-secondary-40">
                                        <i class="material-icons-outlined">@iconName</i>
                                    </span>
                                    <span class="is-secondary-40 is_caption" style="line-height: 16px;">@actionName</span>
                                </div>
                                <span class="icon">
                                    <i class="material-icons-outlined is_caption">arrow_drop_down</i>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="dropdown-menu" style="min-width: 220px;">
                        <div class="dropdown-content is-padding-20 is-flex is-flex-direction-column" style="gap: 10px 0">
                            <div class="is-flex is-align-items-center is-pointer">
                                <span class="icon is-secondary-40">
                                    <i class="material-icons-outlined">reply</i>
                                </span>
                                <span class="is-secondary-40 is_sub2">Trả lời</span>
                            </div>
                            <div class="is-flex is-align-items-center is-pointer">
                                <span class="icon is-secondary-40">
                                    <i class="material-icons-outlined">reply_all</i>
                                </span>
                                <span class="is-secondary-40 is_sub2">Trả lời tất cả</span>
                            </div>
                            <div class="is-flex is-align-items-center is-pointer">
                                <span class="icon is-secondary-40">
                                    <i class="material-icons-outlined">forward</i>
                                </span>
                                <span class="is-secondary-40 is_sub2">Chuyển tiếp</span>
                            </div>
                        </div>
                    </div>
                </div>
                @if(isShowTextTo) 
                {
                    <p class="is_caption is-secondary-40">Đến:</p>
                }

                    @if(membersSelected.Count > 0) 
                    {
                        <ul class="is-flex is-align-items-center is-gap-8">
                            @foreach (var member in membersSelected)
                            {
                            <li class="is-flex is-align-items-center container-to">
                                <figure class="image is-16x16">
                                    <img class="is-rounded" src="@member.avatar">
                                </figure>
                                <span 
                                    style="margin: 0px 8px 0px 4px; max-width: 75px; line-height: 16px;" 
                                    class="is-inline-block text-ellipsis is-secondary-10 is_label2">
                                    @member.name
                                </span>
                                <span class="icon is-pointer" @onclick="() => HandleDeleteMemberSelected(member)">
                                    <i class="material-icons-outlined is-secondary-10">
                                        close
                                    </i>
                                </span>
                            </li>
                            }
                        </ul>
                    }
                    @if(groupsSelected.Count > 0 ) 
                    {
                        <ul class="is-flex is-align-items-center is-gap-8">
                            @foreach (var group in groupsSelected)
                            {
                                <li class="is-flex is-align-items-center container-to">
                                    <span class="is_caption is-secondary-40">Nhóm</span>
                                    <span 
                                        style="margin: 0px 8px 0px 4px; max-width: 75px;" 
                                        class="is-inline-block text-ellipsis is-secondary-10 is_label2">
                                        @group.name
                                    </span>
                                    <span class="icon is-pointer" @onclick="() => HandleDeleteGroupSelected(group)">
                                        <i class="material-icons-outlined is-secondary-10">
                                            close
                                        </i>
                                    </span>
                                </li> 
                            }
                        </ul>
                    }
                    <_AddMember members="members" directionDropdown="is-left" HandleSelectedMember="HandleSelectedMember"/>
                    <_AddGroupMember groups="groups" directionDropdown="is-left" HandleSelectedGroup="HandleSelectedGroup"/>
            </div>

        </div>
    </div>
    <div class="write-zone">
        <_MailWriteZone/>
    </div>
</div>
@code {
    private ToggleHelper toggleViewAllActions = new ToggleHelper();
    [Parameter]
    public string currentAction { get; set; }
    [Parameter]
    public string iconName { get; set; }
    [Parameter]
    public string actionName { get; set; }
    public List<ReceiverModel> receivers { get; set; }
    public List<GroupModel> groups  = new List<GroupModel>();
    public List<MemberModel> members = new List<MemberModel>();
    private List<MemberModel> membersSelected = new List<MemberModel>();
    private List<GroupModel> groupsSelected = new List<GroupModel>();
    [Parameter]
    public string displayName { get; set; }
    [Parameter]
    public bool isShowTextTo { get; set; }

    private void HandleToggleViewAllActions()
    {
        toggleViewAllActions.Toggle();
    }

    protected override void OnInitialized()
    {
        members = InitDataFakeHelper.InitMembers();
        groups = InitDataFakeHelper.InitGroups();
    }


    private void HandleSelectedMember(List<MemberModel> membersList) 
    { 
        List<MemberModel> clonedList = new List<MemberModel>(membersSelected);
        clonedList.AddRange(membersList);
        membersSelected = clonedList;
    }


    private void HandleDeleteMemberSelected(MemberModel member) 
    {
        membersSelected.Remove(member);
        members.Add(member);
    }


    private void HandleSelectedGroup(List<GroupModel> groupsList) 
    { 
        List<GroupModel> clonedList = new List<GroupModel>(groupsSelected);
        clonedList.AddRange(groupsList);
        groupsSelected = clonedList;
    }



    private void HandleDeleteGroupSelected(GroupModel group) 
    {
        groupsSelected.Remove(group);
        groups.Add(group);
    }
}